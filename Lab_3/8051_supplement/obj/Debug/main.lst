                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _putchar
                                     13 	.globl _getchar
                                     14 	.globl _Highspeed_Toggle_Init
                                     15 	.globl _Watchdog_Init
                                     16 	.globl _PWM_Stop_Init
                                     17 	.globl _PWM_Start_Init
                                     18 	.globl _Serial_Init
                                     19 	.globl _printf
                                     20 	.globl _CY
                                     21 	.globl _AC
                                     22 	.globl _F0
                                     23 	.globl _RS1
                                     24 	.globl _RS0
                                     25 	.globl _OV
                                     26 	.globl _F1
                                     27 	.globl _P
                                     28 	.globl _PS
                                     29 	.globl _PT1
                                     30 	.globl _PX1
                                     31 	.globl _PT0
                                     32 	.globl _PX0
                                     33 	.globl _RD
                                     34 	.globl _WR
                                     35 	.globl _T1
                                     36 	.globl _T0
                                     37 	.globl _INT1
                                     38 	.globl _INT0
                                     39 	.globl _TXD
                                     40 	.globl _RXD
                                     41 	.globl _P3_7
                                     42 	.globl _P3_6
                                     43 	.globl _P3_5
                                     44 	.globl _P3_4
                                     45 	.globl _P3_3
                                     46 	.globl _P3_2
                                     47 	.globl _P3_1
                                     48 	.globl _P3_0
                                     49 	.globl _EA
                                     50 	.globl _ES
                                     51 	.globl _ET1
                                     52 	.globl _EX1
                                     53 	.globl _ET0
                                     54 	.globl _EX0
                                     55 	.globl _P2_7
                                     56 	.globl _P2_6
                                     57 	.globl _P2_5
                                     58 	.globl _P2_4
                                     59 	.globl _P2_3
                                     60 	.globl _P2_2
                                     61 	.globl _P2_1
                                     62 	.globl _P2_0
                                     63 	.globl _SM0
                                     64 	.globl _SM1
                                     65 	.globl _SM2
                                     66 	.globl _REN
                                     67 	.globl _TB8
                                     68 	.globl _RB8
                                     69 	.globl _TI
                                     70 	.globl _RI
                                     71 	.globl _P1_7
                                     72 	.globl _P1_6
                                     73 	.globl _P1_5
                                     74 	.globl _P1_4
                                     75 	.globl _P1_3
                                     76 	.globl _P1_2
                                     77 	.globl _P1_1
                                     78 	.globl _P1_0
                                     79 	.globl _TF1
                                     80 	.globl _TR1
                                     81 	.globl _TF0
                                     82 	.globl _TR0
                                     83 	.globl _IE1
                                     84 	.globl _IT1
                                     85 	.globl _IE0
                                     86 	.globl _IT0
                                     87 	.globl _P0_7
                                     88 	.globl _P0_6
                                     89 	.globl _P0_5
                                     90 	.globl _P0_4
                                     91 	.globl _P0_3
                                     92 	.globl _P0_2
                                     93 	.globl _P0_1
                                     94 	.globl _P0_0
                                     95 	.globl _P5_7
                                     96 	.globl _P5_6
                                     97 	.globl _P5_5
                                     98 	.globl _P5_4
                                     99 	.globl _P5_3
                                    100 	.globl _P5_2
                                    101 	.globl _P5_1
                                    102 	.globl _P5_0
                                    103 	.globl _P4_7
                                    104 	.globl _P4_6
                                    105 	.globl _P4_5
                                    106 	.globl _P4_4
                                    107 	.globl _P4_3
                                    108 	.globl _P4_2
                                    109 	.globl _P4_1
                                    110 	.globl _P4_0
                                    111 	.globl _PX0L
                                    112 	.globl _PT0L
                                    113 	.globl _PX1L
                                    114 	.globl _PT1L
                                    115 	.globl _PSL
                                    116 	.globl _PT2L
                                    117 	.globl _PPCL
                                    118 	.globl _EC
                                    119 	.globl _CCF0
                                    120 	.globl _CCF1
                                    121 	.globl _CCF2
                                    122 	.globl _CCF3
                                    123 	.globl _CCF4
                                    124 	.globl _CR
                                    125 	.globl _CF
                                    126 	.globl _TF2
                                    127 	.globl _EXF2
                                    128 	.globl _RCLK
                                    129 	.globl _TCLK
                                    130 	.globl _EXEN2
                                    131 	.globl _TR2
                                    132 	.globl _C_T2
                                    133 	.globl _CP_RL2
                                    134 	.globl _T2CON_7
                                    135 	.globl _T2CON_6
                                    136 	.globl _T2CON_5
                                    137 	.globl _T2CON_4
                                    138 	.globl _T2CON_3
                                    139 	.globl _T2CON_2
                                    140 	.globl _T2CON_1
                                    141 	.globl _T2CON_0
                                    142 	.globl _PT2
                                    143 	.globl _ET2
                                    144 	.globl _B
                                    145 	.globl _ACC
                                    146 	.globl _PSW
                                    147 	.globl _IP
                                    148 	.globl _P3
                                    149 	.globl _IE
                                    150 	.globl _P2
                                    151 	.globl _SBUF
                                    152 	.globl _SCON
                                    153 	.globl _P1
                                    154 	.globl _TH1
                                    155 	.globl _TH0
                                    156 	.globl _TL1
                                    157 	.globl _TL0
                                    158 	.globl _TMOD
                                    159 	.globl _TCON
                                    160 	.globl _PCON
                                    161 	.globl _DPH
                                    162 	.globl _DPL
                                    163 	.globl _SP
                                    164 	.globl _P0
                                    165 	.globl _EECON
                                    166 	.globl _KBF
                                    167 	.globl _KBE
                                    168 	.globl _KBLS
                                    169 	.globl _BRL
                                    170 	.globl _BDRCON
                                    171 	.globl _T2MOD
                                    172 	.globl _SPDAT
                                    173 	.globl _SPSTA
                                    174 	.globl _SPCON
                                    175 	.globl _SADEN
                                    176 	.globl _SADDR
                                    177 	.globl _WDTPRG
                                    178 	.globl _WDTRST
                                    179 	.globl _P5
                                    180 	.globl _P4
                                    181 	.globl _IPH1
                                    182 	.globl _IPL1
                                    183 	.globl _IPH0
                                    184 	.globl _IPL0
                                    185 	.globl _IEN1
                                    186 	.globl _IEN0
                                    187 	.globl _CMOD
                                    188 	.globl _CL
                                    189 	.globl _CH
                                    190 	.globl _CCON
                                    191 	.globl _CCAPM4
                                    192 	.globl _CCAPM3
                                    193 	.globl _CCAPM2
                                    194 	.globl _CCAPM1
                                    195 	.globl _CCAPM0
                                    196 	.globl _CCAP4L
                                    197 	.globl _CCAP3L
                                    198 	.globl _CCAP2L
                                    199 	.globl _CCAP1L
                                    200 	.globl _CCAP0L
                                    201 	.globl _CCAP4H
                                    202 	.globl _CCAP3H
                                    203 	.globl _CCAP2H
                                    204 	.globl _CCAP1H
                                    205 	.globl _CCAP0H
                                    206 	.globl _CKCON1
                                    207 	.globl _CKCON0
                                    208 	.globl _CKRL
                                    209 	.globl _AUXR1
                                    210 	.globl _AUXR
                                    211 	.globl _TH2
                                    212 	.globl _TL2
                                    213 	.globl _RCAP2H
                                    214 	.globl _RCAP2L
                                    215 	.globl _T2CON
                                    216 	.globl _mode
                                    217 ;--------------------------------------------------------
                                    218 ; special function registers
                                    219 ;--------------------------------------------------------
                                    220 	.area RSEG    (ABS,DATA)
      000000                        221 	.org 0x0000
                           0000C8   222 G$T2CON$0_0$0 == 0x00c8
                           0000C8   223 _T2CON	=	0x00c8
                           0000CA   224 G$RCAP2L$0_0$0 == 0x00ca
                           0000CA   225 _RCAP2L	=	0x00ca
                           0000CB   226 G$RCAP2H$0_0$0 == 0x00cb
                           0000CB   227 _RCAP2H	=	0x00cb
                           0000CC   228 G$TL2$0_0$0 == 0x00cc
                           0000CC   229 _TL2	=	0x00cc
                           0000CD   230 G$TH2$0_0$0 == 0x00cd
                           0000CD   231 _TH2	=	0x00cd
                           00008E   232 G$AUXR$0_0$0 == 0x008e
                           00008E   233 _AUXR	=	0x008e
                           0000A2   234 G$AUXR1$0_0$0 == 0x00a2
                           0000A2   235 _AUXR1	=	0x00a2
                           000097   236 G$CKRL$0_0$0 == 0x0097
                           000097   237 _CKRL	=	0x0097
                           00008F   238 G$CKCON0$0_0$0 == 0x008f
                           00008F   239 _CKCON0	=	0x008f
                           0000AF   240 G$CKCON1$0_0$0 == 0x00af
                           0000AF   241 _CKCON1	=	0x00af
                           0000FA   242 G$CCAP0H$0_0$0 == 0x00fa
                           0000FA   243 _CCAP0H	=	0x00fa
                           0000FB   244 G$CCAP1H$0_0$0 == 0x00fb
                           0000FB   245 _CCAP1H	=	0x00fb
                           0000FC   246 G$CCAP2H$0_0$0 == 0x00fc
                           0000FC   247 _CCAP2H	=	0x00fc
                           0000FD   248 G$CCAP3H$0_0$0 == 0x00fd
                           0000FD   249 _CCAP3H	=	0x00fd
                           0000FE   250 G$CCAP4H$0_0$0 == 0x00fe
                           0000FE   251 _CCAP4H	=	0x00fe
                           0000EA   252 G$CCAP0L$0_0$0 == 0x00ea
                           0000EA   253 _CCAP0L	=	0x00ea
                           0000EB   254 G$CCAP1L$0_0$0 == 0x00eb
                           0000EB   255 _CCAP1L	=	0x00eb
                           0000EC   256 G$CCAP2L$0_0$0 == 0x00ec
                           0000EC   257 _CCAP2L	=	0x00ec
                           0000ED   258 G$CCAP3L$0_0$0 == 0x00ed
                           0000ED   259 _CCAP3L	=	0x00ed
                           0000EE   260 G$CCAP4L$0_0$0 == 0x00ee
                           0000EE   261 _CCAP4L	=	0x00ee
                           0000DA   262 G$CCAPM0$0_0$0 == 0x00da
                           0000DA   263 _CCAPM0	=	0x00da
                           0000DB   264 G$CCAPM1$0_0$0 == 0x00db
                           0000DB   265 _CCAPM1	=	0x00db
                           0000DC   266 G$CCAPM2$0_0$0 == 0x00dc
                           0000DC   267 _CCAPM2	=	0x00dc
                           0000DD   268 G$CCAPM3$0_0$0 == 0x00dd
                           0000DD   269 _CCAPM3	=	0x00dd
                           0000DE   270 G$CCAPM4$0_0$0 == 0x00de
                           0000DE   271 _CCAPM4	=	0x00de
                           0000D8   272 G$CCON$0_0$0 == 0x00d8
                           0000D8   273 _CCON	=	0x00d8
                           0000F9   274 G$CH$0_0$0 == 0x00f9
                           0000F9   275 _CH	=	0x00f9
                           0000E9   276 G$CL$0_0$0 == 0x00e9
                           0000E9   277 _CL	=	0x00e9
                           0000D9   278 G$CMOD$0_0$0 == 0x00d9
                           0000D9   279 _CMOD	=	0x00d9
                           0000A8   280 G$IEN0$0_0$0 == 0x00a8
                           0000A8   281 _IEN0	=	0x00a8
                           0000B1   282 G$IEN1$0_0$0 == 0x00b1
                           0000B1   283 _IEN1	=	0x00b1
                           0000B8   284 G$IPL0$0_0$0 == 0x00b8
                           0000B8   285 _IPL0	=	0x00b8
                           0000B7   286 G$IPH0$0_0$0 == 0x00b7
                           0000B7   287 _IPH0	=	0x00b7
                           0000B2   288 G$IPL1$0_0$0 == 0x00b2
                           0000B2   289 _IPL1	=	0x00b2
                           0000B3   290 G$IPH1$0_0$0 == 0x00b3
                           0000B3   291 _IPH1	=	0x00b3
                           0000C0   292 G$P4$0_0$0 == 0x00c0
                           0000C0   293 _P4	=	0x00c0
                           0000E8   294 G$P5$0_0$0 == 0x00e8
                           0000E8   295 _P5	=	0x00e8
                           0000A6   296 G$WDTRST$0_0$0 == 0x00a6
                           0000A6   297 _WDTRST	=	0x00a6
                           0000A7   298 G$WDTPRG$0_0$0 == 0x00a7
                           0000A7   299 _WDTPRG	=	0x00a7
                           0000A9   300 G$SADDR$0_0$0 == 0x00a9
                           0000A9   301 _SADDR	=	0x00a9
                           0000B9   302 G$SADEN$0_0$0 == 0x00b9
                           0000B9   303 _SADEN	=	0x00b9
                           0000C3   304 G$SPCON$0_0$0 == 0x00c3
                           0000C3   305 _SPCON	=	0x00c3
                           0000C4   306 G$SPSTA$0_0$0 == 0x00c4
                           0000C4   307 _SPSTA	=	0x00c4
                           0000C5   308 G$SPDAT$0_0$0 == 0x00c5
                           0000C5   309 _SPDAT	=	0x00c5
                           0000C9   310 G$T2MOD$0_0$0 == 0x00c9
                           0000C9   311 _T2MOD	=	0x00c9
                           00009B   312 G$BDRCON$0_0$0 == 0x009b
                           00009B   313 _BDRCON	=	0x009b
                           00009A   314 G$BRL$0_0$0 == 0x009a
                           00009A   315 _BRL	=	0x009a
                           00009C   316 G$KBLS$0_0$0 == 0x009c
                           00009C   317 _KBLS	=	0x009c
                           00009D   318 G$KBE$0_0$0 == 0x009d
                           00009D   319 _KBE	=	0x009d
                           00009E   320 G$KBF$0_0$0 == 0x009e
                           00009E   321 _KBF	=	0x009e
                           0000D2   322 G$EECON$0_0$0 == 0x00d2
                           0000D2   323 _EECON	=	0x00d2
                           000080   324 G$P0$0_0$0 == 0x0080
                           000080   325 _P0	=	0x0080
                           000081   326 G$SP$0_0$0 == 0x0081
                           000081   327 _SP	=	0x0081
                           000082   328 G$DPL$0_0$0 == 0x0082
                           000082   329 _DPL	=	0x0082
                           000083   330 G$DPH$0_0$0 == 0x0083
                           000083   331 _DPH	=	0x0083
                           000087   332 G$PCON$0_0$0 == 0x0087
                           000087   333 _PCON	=	0x0087
                           000088   334 G$TCON$0_0$0 == 0x0088
                           000088   335 _TCON	=	0x0088
                           000089   336 G$TMOD$0_0$0 == 0x0089
                           000089   337 _TMOD	=	0x0089
                           00008A   338 G$TL0$0_0$0 == 0x008a
                           00008A   339 _TL0	=	0x008a
                           00008B   340 G$TL1$0_0$0 == 0x008b
                           00008B   341 _TL1	=	0x008b
                           00008C   342 G$TH0$0_0$0 == 0x008c
                           00008C   343 _TH0	=	0x008c
                           00008D   344 G$TH1$0_0$0 == 0x008d
                           00008D   345 _TH1	=	0x008d
                           000090   346 G$P1$0_0$0 == 0x0090
                           000090   347 _P1	=	0x0090
                           000098   348 G$SCON$0_0$0 == 0x0098
                           000098   349 _SCON	=	0x0098
                           000099   350 G$SBUF$0_0$0 == 0x0099
                           000099   351 _SBUF	=	0x0099
                           0000A0   352 G$P2$0_0$0 == 0x00a0
                           0000A0   353 _P2	=	0x00a0
                           0000A8   354 G$IE$0_0$0 == 0x00a8
                           0000A8   355 _IE	=	0x00a8
                           0000B0   356 G$P3$0_0$0 == 0x00b0
                           0000B0   357 _P3	=	0x00b0
                           0000B8   358 G$IP$0_0$0 == 0x00b8
                           0000B8   359 _IP	=	0x00b8
                           0000D0   360 G$PSW$0_0$0 == 0x00d0
                           0000D0   361 _PSW	=	0x00d0
                           0000E0   362 G$ACC$0_0$0 == 0x00e0
                           0000E0   363 _ACC	=	0x00e0
                           0000F0   364 G$B$0_0$0 == 0x00f0
                           0000F0   365 _B	=	0x00f0
                                    366 ;--------------------------------------------------------
                                    367 ; special function bits
                                    368 ;--------------------------------------------------------
                                    369 	.area RSEG    (ABS,DATA)
      000000                        370 	.org 0x0000
                           0000AD   371 G$ET2$0_0$0 == 0x00ad
                           0000AD   372 _ET2	=	0x00ad
                           0000BD   373 G$PT2$0_0$0 == 0x00bd
                           0000BD   374 _PT2	=	0x00bd
                           0000C8   375 G$T2CON_0$0_0$0 == 0x00c8
                           0000C8   376 _T2CON_0	=	0x00c8
                           0000C9   377 G$T2CON_1$0_0$0 == 0x00c9
                           0000C9   378 _T2CON_1	=	0x00c9
                           0000CA   379 G$T2CON_2$0_0$0 == 0x00ca
                           0000CA   380 _T2CON_2	=	0x00ca
                           0000CB   381 G$T2CON_3$0_0$0 == 0x00cb
                           0000CB   382 _T2CON_3	=	0x00cb
                           0000CC   383 G$T2CON_4$0_0$0 == 0x00cc
                           0000CC   384 _T2CON_4	=	0x00cc
                           0000CD   385 G$T2CON_5$0_0$0 == 0x00cd
                           0000CD   386 _T2CON_5	=	0x00cd
                           0000CE   387 G$T2CON_6$0_0$0 == 0x00ce
                           0000CE   388 _T2CON_6	=	0x00ce
                           0000CF   389 G$T2CON_7$0_0$0 == 0x00cf
                           0000CF   390 _T2CON_7	=	0x00cf
                           0000C8   391 G$CP_RL2$0_0$0 == 0x00c8
                           0000C8   392 _CP_RL2	=	0x00c8
                           0000C9   393 G$C_T2$0_0$0 == 0x00c9
                           0000C9   394 _C_T2	=	0x00c9
                           0000CA   395 G$TR2$0_0$0 == 0x00ca
                           0000CA   396 _TR2	=	0x00ca
                           0000CB   397 G$EXEN2$0_0$0 == 0x00cb
                           0000CB   398 _EXEN2	=	0x00cb
                           0000CC   399 G$TCLK$0_0$0 == 0x00cc
                           0000CC   400 _TCLK	=	0x00cc
                           0000CD   401 G$RCLK$0_0$0 == 0x00cd
                           0000CD   402 _RCLK	=	0x00cd
                           0000CE   403 G$EXF2$0_0$0 == 0x00ce
                           0000CE   404 _EXF2	=	0x00ce
                           0000CF   405 G$TF2$0_0$0 == 0x00cf
                           0000CF   406 _TF2	=	0x00cf
                           0000DF   407 G$CF$0_0$0 == 0x00df
                           0000DF   408 _CF	=	0x00df
                           0000DE   409 G$CR$0_0$0 == 0x00de
                           0000DE   410 _CR	=	0x00de
                           0000DC   411 G$CCF4$0_0$0 == 0x00dc
                           0000DC   412 _CCF4	=	0x00dc
                           0000DB   413 G$CCF3$0_0$0 == 0x00db
                           0000DB   414 _CCF3	=	0x00db
                           0000DA   415 G$CCF2$0_0$0 == 0x00da
                           0000DA   416 _CCF2	=	0x00da
                           0000D9   417 G$CCF1$0_0$0 == 0x00d9
                           0000D9   418 _CCF1	=	0x00d9
                           0000D8   419 G$CCF0$0_0$0 == 0x00d8
                           0000D8   420 _CCF0	=	0x00d8
                           0000AE   421 G$EC$0_0$0 == 0x00ae
                           0000AE   422 _EC	=	0x00ae
                           0000BE   423 G$PPCL$0_0$0 == 0x00be
                           0000BE   424 _PPCL	=	0x00be
                           0000BD   425 G$PT2L$0_0$0 == 0x00bd
                           0000BD   426 _PT2L	=	0x00bd
                           0000BC   427 G$PSL$0_0$0 == 0x00bc
                           0000BC   428 _PSL	=	0x00bc
                           0000BB   429 G$PT1L$0_0$0 == 0x00bb
                           0000BB   430 _PT1L	=	0x00bb
                           0000BA   431 G$PX1L$0_0$0 == 0x00ba
                           0000BA   432 _PX1L	=	0x00ba
                           0000B9   433 G$PT0L$0_0$0 == 0x00b9
                           0000B9   434 _PT0L	=	0x00b9
                           0000B8   435 G$PX0L$0_0$0 == 0x00b8
                           0000B8   436 _PX0L	=	0x00b8
                           0000C0   437 G$P4_0$0_0$0 == 0x00c0
                           0000C0   438 _P4_0	=	0x00c0
                           0000C1   439 G$P4_1$0_0$0 == 0x00c1
                           0000C1   440 _P4_1	=	0x00c1
                           0000C2   441 G$P4_2$0_0$0 == 0x00c2
                           0000C2   442 _P4_2	=	0x00c2
                           0000C3   443 G$P4_3$0_0$0 == 0x00c3
                           0000C3   444 _P4_3	=	0x00c3
                           0000C4   445 G$P4_4$0_0$0 == 0x00c4
                           0000C4   446 _P4_4	=	0x00c4
                           0000C5   447 G$P4_5$0_0$0 == 0x00c5
                           0000C5   448 _P4_5	=	0x00c5
                           0000C6   449 G$P4_6$0_0$0 == 0x00c6
                           0000C6   450 _P4_6	=	0x00c6
                           0000C7   451 G$P4_7$0_0$0 == 0x00c7
                           0000C7   452 _P4_7	=	0x00c7
                           0000E8   453 G$P5_0$0_0$0 == 0x00e8
                           0000E8   454 _P5_0	=	0x00e8
                           0000E9   455 G$P5_1$0_0$0 == 0x00e9
                           0000E9   456 _P5_1	=	0x00e9
                           0000EA   457 G$P5_2$0_0$0 == 0x00ea
                           0000EA   458 _P5_2	=	0x00ea
                           0000EB   459 G$P5_3$0_0$0 == 0x00eb
                           0000EB   460 _P5_3	=	0x00eb
                           0000EC   461 G$P5_4$0_0$0 == 0x00ec
                           0000EC   462 _P5_4	=	0x00ec
                           0000ED   463 G$P5_5$0_0$0 == 0x00ed
                           0000ED   464 _P5_5	=	0x00ed
                           0000EE   465 G$P5_6$0_0$0 == 0x00ee
                           0000EE   466 _P5_6	=	0x00ee
                           0000EF   467 G$P5_7$0_0$0 == 0x00ef
                           0000EF   468 _P5_7	=	0x00ef
                           000080   469 G$P0_0$0_0$0 == 0x0080
                           000080   470 _P0_0	=	0x0080
                           000081   471 G$P0_1$0_0$0 == 0x0081
                           000081   472 _P0_1	=	0x0081
                           000082   473 G$P0_2$0_0$0 == 0x0082
                           000082   474 _P0_2	=	0x0082
                           000083   475 G$P0_3$0_0$0 == 0x0083
                           000083   476 _P0_3	=	0x0083
                           000084   477 G$P0_4$0_0$0 == 0x0084
                           000084   478 _P0_4	=	0x0084
                           000085   479 G$P0_5$0_0$0 == 0x0085
                           000085   480 _P0_5	=	0x0085
                           000086   481 G$P0_6$0_0$0 == 0x0086
                           000086   482 _P0_6	=	0x0086
                           000087   483 G$P0_7$0_0$0 == 0x0087
                           000087   484 _P0_7	=	0x0087
                           000088   485 G$IT0$0_0$0 == 0x0088
                           000088   486 _IT0	=	0x0088
                           000089   487 G$IE0$0_0$0 == 0x0089
                           000089   488 _IE0	=	0x0089
                           00008A   489 G$IT1$0_0$0 == 0x008a
                           00008A   490 _IT1	=	0x008a
                           00008B   491 G$IE1$0_0$0 == 0x008b
                           00008B   492 _IE1	=	0x008b
                           00008C   493 G$TR0$0_0$0 == 0x008c
                           00008C   494 _TR0	=	0x008c
                           00008D   495 G$TF0$0_0$0 == 0x008d
                           00008D   496 _TF0	=	0x008d
                           00008E   497 G$TR1$0_0$0 == 0x008e
                           00008E   498 _TR1	=	0x008e
                           00008F   499 G$TF1$0_0$0 == 0x008f
                           00008F   500 _TF1	=	0x008f
                           000090   501 G$P1_0$0_0$0 == 0x0090
                           000090   502 _P1_0	=	0x0090
                           000091   503 G$P1_1$0_0$0 == 0x0091
                           000091   504 _P1_1	=	0x0091
                           000092   505 G$P1_2$0_0$0 == 0x0092
                           000092   506 _P1_2	=	0x0092
                           000093   507 G$P1_3$0_0$0 == 0x0093
                           000093   508 _P1_3	=	0x0093
                           000094   509 G$P1_4$0_0$0 == 0x0094
                           000094   510 _P1_4	=	0x0094
                           000095   511 G$P1_5$0_0$0 == 0x0095
                           000095   512 _P1_5	=	0x0095
                           000096   513 G$P1_6$0_0$0 == 0x0096
                           000096   514 _P1_6	=	0x0096
                           000097   515 G$P1_7$0_0$0 == 0x0097
                           000097   516 _P1_7	=	0x0097
                           000098   517 G$RI$0_0$0 == 0x0098
                           000098   518 _RI	=	0x0098
                           000099   519 G$TI$0_0$0 == 0x0099
                           000099   520 _TI	=	0x0099
                           00009A   521 G$RB8$0_0$0 == 0x009a
                           00009A   522 _RB8	=	0x009a
                           00009B   523 G$TB8$0_0$0 == 0x009b
                           00009B   524 _TB8	=	0x009b
                           00009C   525 G$REN$0_0$0 == 0x009c
                           00009C   526 _REN	=	0x009c
                           00009D   527 G$SM2$0_0$0 == 0x009d
                           00009D   528 _SM2	=	0x009d
                           00009E   529 G$SM1$0_0$0 == 0x009e
                           00009E   530 _SM1	=	0x009e
                           00009F   531 G$SM0$0_0$0 == 0x009f
                           00009F   532 _SM0	=	0x009f
                           0000A0   533 G$P2_0$0_0$0 == 0x00a0
                           0000A0   534 _P2_0	=	0x00a0
                           0000A1   535 G$P2_1$0_0$0 == 0x00a1
                           0000A1   536 _P2_1	=	0x00a1
                           0000A2   537 G$P2_2$0_0$0 == 0x00a2
                           0000A2   538 _P2_2	=	0x00a2
                           0000A3   539 G$P2_3$0_0$0 == 0x00a3
                           0000A3   540 _P2_3	=	0x00a3
                           0000A4   541 G$P2_4$0_0$0 == 0x00a4
                           0000A4   542 _P2_4	=	0x00a4
                           0000A5   543 G$P2_5$0_0$0 == 0x00a5
                           0000A5   544 _P2_5	=	0x00a5
                           0000A6   545 G$P2_6$0_0$0 == 0x00a6
                           0000A6   546 _P2_6	=	0x00a6
                           0000A7   547 G$P2_7$0_0$0 == 0x00a7
                           0000A7   548 _P2_7	=	0x00a7
                           0000A8   549 G$EX0$0_0$0 == 0x00a8
                           0000A8   550 _EX0	=	0x00a8
                           0000A9   551 G$ET0$0_0$0 == 0x00a9
                           0000A9   552 _ET0	=	0x00a9
                           0000AA   553 G$EX1$0_0$0 == 0x00aa
                           0000AA   554 _EX1	=	0x00aa
                           0000AB   555 G$ET1$0_0$0 == 0x00ab
                           0000AB   556 _ET1	=	0x00ab
                           0000AC   557 G$ES$0_0$0 == 0x00ac
                           0000AC   558 _ES	=	0x00ac
                           0000AF   559 G$EA$0_0$0 == 0x00af
                           0000AF   560 _EA	=	0x00af
                           0000B0   561 G$P3_0$0_0$0 == 0x00b0
                           0000B0   562 _P3_0	=	0x00b0
                           0000B1   563 G$P3_1$0_0$0 == 0x00b1
                           0000B1   564 _P3_1	=	0x00b1
                           0000B2   565 G$P3_2$0_0$0 == 0x00b2
                           0000B2   566 _P3_2	=	0x00b2
                           0000B3   567 G$P3_3$0_0$0 == 0x00b3
                           0000B3   568 _P3_3	=	0x00b3
                           0000B4   569 G$P3_4$0_0$0 == 0x00b4
                           0000B4   570 _P3_4	=	0x00b4
                           0000B5   571 G$P3_5$0_0$0 == 0x00b5
                           0000B5   572 _P3_5	=	0x00b5
                           0000B6   573 G$P3_6$0_0$0 == 0x00b6
                           0000B6   574 _P3_6	=	0x00b6
                           0000B7   575 G$P3_7$0_0$0 == 0x00b7
                           0000B7   576 _P3_7	=	0x00b7
                           0000B0   577 G$RXD$0_0$0 == 0x00b0
                           0000B0   578 _RXD	=	0x00b0
                           0000B1   579 G$TXD$0_0$0 == 0x00b1
                           0000B1   580 _TXD	=	0x00b1
                           0000B2   581 G$INT0$0_0$0 == 0x00b2
                           0000B2   582 _INT0	=	0x00b2
                           0000B3   583 G$INT1$0_0$0 == 0x00b3
                           0000B3   584 _INT1	=	0x00b3
                           0000B4   585 G$T0$0_0$0 == 0x00b4
                           0000B4   586 _T0	=	0x00b4
                           0000B5   587 G$T1$0_0$0 == 0x00b5
                           0000B5   588 _T1	=	0x00b5
                           0000B6   589 G$WR$0_0$0 == 0x00b6
                           0000B6   590 _WR	=	0x00b6
                           0000B7   591 G$RD$0_0$0 == 0x00b7
                           0000B7   592 _RD	=	0x00b7
                           0000B8   593 G$PX0$0_0$0 == 0x00b8
                           0000B8   594 _PX0	=	0x00b8
                           0000B9   595 G$PT0$0_0$0 == 0x00b9
                           0000B9   596 _PT0	=	0x00b9
                           0000BA   597 G$PX1$0_0$0 == 0x00ba
                           0000BA   598 _PX1	=	0x00ba
                           0000BB   599 G$PT1$0_0$0 == 0x00bb
                           0000BB   600 _PT1	=	0x00bb
                           0000BC   601 G$PS$0_0$0 == 0x00bc
                           0000BC   602 _PS	=	0x00bc
                           0000D0   603 G$P$0_0$0 == 0x00d0
                           0000D0   604 _P	=	0x00d0
                           0000D1   605 G$F1$0_0$0 == 0x00d1
                           0000D1   606 _F1	=	0x00d1
                           0000D2   607 G$OV$0_0$0 == 0x00d2
                           0000D2   608 _OV	=	0x00d2
                           0000D3   609 G$RS0$0_0$0 == 0x00d3
                           0000D3   610 _RS0	=	0x00d3
                           0000D4   611 G$RS1$0_0$0 == 0x00d4
                           0000D4   612 _RS1	=	0x00d4
                           0000D5   613 G$F0$0_0$0 == 0x00d5
                           0000D5   614 _F0	=	0x00d5
                           0000D6   615 G$AC$0_0$0 == 0x00d6
                           0000D6   616 _AC	=	0x00d6
                           0000D7   617 G$CY$0_0$0 == 0x00d7
                           0000D7   618 _CY	=	0x00d7
                                    619 ;--------------------------------------------------------
                                    620 ; overlayable register banks
                                    621 ;--------------------------------------------------------
                                    622 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        623 	.ds 8
                                    624 ;--------------------------------------------------------
                                    625 ; internal ram data
                                    626 ;--------------------------------------------------------
                                    627 	.area DSEG    (DATA)
                                    628 ;--------------------------------------------------------
                                    629 ; overlayable items in internal ram
                                    630 ;--------------------------------------------------------
                                    631 ;--------------------------------------------------------
                                    632 ; Stack segment in internal ram
                                    633 ;--------------------------------------------------------
                                    634 	.area	SSEG
      000000                        635 __start__stack:
      000000                        636 	.ds	1
                                    637 
                                    638 ;--------------------------------------------------------
                                    639 ; indirectly addressable internal ram data
                                    640 ;--------------------------------------------------------
                                    641 	.area ISEG    (DATA)
                                    642 ;--------------------------------------------------------
                                    643 ; absolute internal ram data
                                    644 ;--------------------------------------------------------
                                    645 	.area IABS    (ABS,DATA)
                                    646 	.area IABS    (ABS,DATA)
                                    647 ;--------------------------------------------------------
                                    648 ; bit data
                                    649 ;--------------------------------------------------------
                                    650 	.area BSEG    (BIT)
                                    651 ;--------------------------------------------------------
                                    652 ; paged external ram data
                                    653 ;--------------------------------------------------------
                                    654 	.area PSEG    (PAG,XDATA)
                                    655 ;--------------------------------------------------------
                                    656 ; external ram data
                                    657 ;--------------------------------------------------------
                                    658 	.area XSEG    (XDATA)
                           000000   659 G$mode$0_0$0==.
      000000                        660 _mode::
      000000                        661 	.ds 2
                                    662 ;--------------------------------------------------------
                                    663 ; absolute external ram data
                                    664 ;--------------------------------------------------------
                                    665 	.area XABS    (ABS,XDATA)
                                    666 ;--------------------------------------------------------
                                    667 ; external initialized ram data
                                    668 ;--------------------------------------------------------
                                    669 	.area XISEG   (XDATA)
                                    670 	.area HOME    (CODE)
                                    671 	.area GSINIT0 (CODE)
                                    672 	.area GSINIT1 (CODE)
                                    673 	.area GSINIT2 (CODE)
                                    674 	.area GSINIT3 (CODE)
                                    675 	.area GSINIT4 (CODE)
                                    676 	.area GSINIT5 (CODE)
                                    677 	.area GSINIT  (CODE)
                                    678 	.area GSFINAL (CODE)
                                    679 	.area CSEG    (CODE)
                                    680 ;--------------------------------------------------------
                                    681 ; interrupt vector
                                    682 ;--------------------------------------------------------
                                    683 	.area HOME    (CODE)
      000000                        684 __interrupt_vect:
      000000 02r00r00         [24]  685 	ljmp	__sdcc_gsinit_startup
                                    686 ;--------------------------------------------------------
                                    687 ; global & static initialisations
                                    688 ;--------------------------------------------------------
                                    689 	.area HOME    (CODE)
                                    690 	.area GSINIT  (CODE)
                                    691 	.area GSFINAL (CODE)
                                    692 	.area GSINIT  (CODE)
                                    693 	.globl __sdcc_gsinit_startup
                                    694 	.globl __sdcc_program_startup
                                    695 	.globl __start__stack
                                    696 	.globl __mcs51_genXINIT
                                    697 	.globl __mcs51_genXRAMCLEAR
                                    698 	.globl __mcs51_genRAMCLEAR
                                    699 	.area GSFINAL (CODE)
      000000 02r00r03         [24]  700 	ljmp	__sdcc_program_startup
                                    701 ;--------------------------------------------------------
                                    702 ; Home
                                    703 ;--------------------------------------------------------
                                    704 	.area HOME    (CODE)
                                    705 	.area HOME    (CODE)
      000003                        706 __sdcc_program_startup:
      000003 02r00r00         [24]  707 	ljmp	_main
                                    708 ;	return from main will return to caller
                                    709 ;--------------------------------------------------------
                                    710 ; code
                                    711 ;--------------------------------------------------------
                                    712 	.area CSEG    (CODE)
                                    713 ;------------------------------------------------------------
                                    714 ;Allocation info for local variables in function 'main'
                                    715 ;------------------------------------------------------------
                           000000   716 	G$main$0$0 ==.
                           000000   717 	C$main.c$16$0_0$74 ==.
                                    718 ;	main.c:16: void main(void)
                                    719 ;	-----------------------------------------
                                    720 ;	 function main
                                    721 ;	-----------------------------------------
      000000                        722 _main:
                           000007   723 	ar7 = 0x07
                           000006   724 	ar6 = 0x06
                           000005   725 	ar5 = 0x05
                           000004   726 	ar4 = 0x04
                           000003   727 	ar3 = 0x03
                           000002   728 	ar2 = 0x02
                           000001   729 	ar1 = 0x01
                           000000   730 	ar0 = 0x00
                           000000   731 	C$main.c$18$1_0$74 ==.
                                    732 ;	main.c:18: Serial_Init();
      000000 12r00r00         [24]  733 	lcall	_Serial_Init
                           000003   734 	C$main.c$20$1_0$74 ==.
                                    735 ;	main.c:20: printf("\r\n ***************************************\r\n");
      000003 74r00            [12]  736 	mov	a,#___str_0
      000005 C0 E0            [24]  737 	push	acc
      000007 74s00            [12]  738 	mov	a,#(___str_0 >> 8)
      000009 C0 E0            [24]  739 	push	acc
      00000B 74 80            [12]  740 	mov	a,#0x80
      00000D C0 E0            [24]  741 	push	acc
      00000F 12r00r00         [24]  742 	lcall	_printf
      000012 15 81            [12]  743 	dec	sp
      000014 15 81            [12]  744 	dec	sp
      000016 15 81            [12]  745 	dec	sp
                           000018   746 	C$main.c$21$1_0$74 ==.
                                    747 ;	main.c:21: printf("\r\n Press 1 to start PWM signal\r\n");
      000018 74r2D            [12]  748 	mov	a,#___str_1
      00001A C0 E0            [24]  749 	push	acc
      00001C 74s00            [12]  750 	mov	a,#(___str_1 >> 8)
      00001E C0 E0            [24]  751 	push	acc
      000020 74 80            [12]  752 	mov	a,#0x80
      000022 C0 E0            [24]  753 	push	acc
      000024 12r00r00         [24]  754 	lcall	_printf
      000027 15 81            [12]  755 	dec	sp
      000029 15 81            [12]  756 	dec	sp
      00002B 15 81            [12]  757 	dec	sp
                           00002D   758 	C$main.c$22$1_0$74 ==.
                                    759 ;	main.c:22: printf("\r\n Press 2 to stop PWM signal\r\n");
      00002D 74r4E            [12]  760 	mov	a,#___str_2
      00002F C0 E0            [24]  761 	push	acc
      000031 74s00            [12]  762 	mov	a,#(___str_2 >> 8)
      000033 C0 E0            [24]  763 	push	acc
      000035 74 80            [12]  764 	mov	a,#0x80
      000037 C0 E0            [24]  765 	push	acc
      000039 12r00r00         [24]  766 	lcall	_printf
      00003C 15 81            [12]  767 	dec	sp
      00003E 15 81            [12]  768 	dec	sp
      000040 15 81            [12]  769 	dec	sp
                           000042   770 	C$main.c$23$1_0$74 ==.
                                    771 ;	main.c:23: printf("\r\n Press 3 to start Watch Dog Timer\r\n");
      000042 74r6E            [12]  772 	mov	a,#___str_3
      000044 C0 E0            [24]  773 	push	acc
      000046 74s00            [12]  774 	mov	a,#(___str_3 >> 8)
      000048 C0 E0            [24]  775 	push	acc
      00004A 74 80            [12]  776 	mov	a,#0x80
      00004C C0 E0            [24]  777 	push	acc
      00004E 12r00r00         [24]  778 	lcall	_printf
      000051 15 81            [12]  779 	dec	sp
      000053 15 81            [12]  780 	dec	sp
      000055 15 81            [12]  781 	dec	sp
                           000057   782 	C$main.c$24$1_0$74 ==.
                                    783 ;	main.c:24: printf("\r\n Press 4 to set the minimum frequency\r\n"); //1.8
      000057 74r94            [12]  784 	mov	a,#___str_4
      000059 C0 E0            [24]  785 	push	acc
      00005B 74s00            [12]  786 	mov	a,#(___str_4 >> 8)
      00005D C0 E0            [24]  787 	push	acc
      00005F 74 80            [12]  788 	mov	a,#0x80
      000061 C0 E0            [24]  789 	push	acc
      000063 12r00r00         [24]  790 	lcall	_printf
      000066 15 81            [12]  791 	dec	sp
      000068 15 81            [12]  792 	dec	sp
      00006A 15 81            [12]  793 	dec	sp
                           00006C   794 	C$main.c$25$1_0$74 ==.
                                    795 ;	main.c:25: printf("\r\n Press 5 to set the maximum frequency\r\n");
      00006C 74rBE            [12]  796 	mov	a,#___str_5
      00006E C0 E0            [24]  797 	push	acc
      000070 74s00            [12]  798 	mov	a,#(___str_5 >> 8)
      000072 C0 E0            [24]  799 	push	acc
      000074 74 80            [12]  800 	mov	a,#0x80
      000076 C0 E0            [24]  801 	push	acc
      000078 12r00r00         [24]  802 	lcall	_printf
      00007B 15 81            [12]  803 	dec	sp
      00007D 15 81            [12]  804 	dec	sp
      00007F 15 81            [12]  805 	dec	sp
                           000081   806 	C$main.c$26$1_0$74 ==.
                                    807 ;	main.c:26: printf("\r\n Press 6 to go to Idle Mode\r\n"); //
      000081 74rE8            [12]  808 	mov	a,#___str_6
      000083 C0 E0            [24]  809 	push	acc
      000085 74s00            [12]  810 	mov	a,#(___str_6 >> 8)
      000087 C0 E0            [24]  811 	push	acc
      000089 74 80            [12]  812 	mov	a,#0x80
      00008B C0 E0            [24]  813 	push	acc
      00008D 12r00r00         [24]  814 	lcall	_printf
      000090 15 81            [12]  815 	dec	sp
      000092 15 81            [12]  816 	dec	sp
      000094 15 81            [12]  817 	dec	sp
                           000096   818 	C$main.c$27$1_0$74 ==.
                                    819 ;	main.c:27: printf("\r\n Press 7 to set to Power Down Mode\r\n");
      000096 74r08            [12]  820 	mov	a,#___str_7
      000098 C0 E0            [24]  821 	push	acc
      00009A 74s01            [12]  822 	mov	a,#(___str_7 >> 8)
      00009C C0 E0            [24]  823 	push	acc
      00009E 74 80            [12]  824 	mov	a,#0x80
      0000A0 C0 E0            [24]  825 	push	acc
      0000A2 12r00r00         [24]  826 	lcall	_printf
      0000A5 15 81            [12]  827 	dec	sp
      0000A7 15 81            [12]  828 	dec	sp
      0000A9 15 81            [12]  829 	dec	sp
                           0000AB   830 	C$main.c$28$1_0$74 ==.
                                    831 ;	main.c:28: printf("\r\n Press 8 to set to High Speed Mode\r\n");
      0000AB 74r2F            [12]  832 	mov	a,#___str_8
      0000AD C0 E0            [24]  833 	push	acc
      0000AF 74s01            [12]  834 	mov	a,#(___str_8 >> 8)
      0000B1 C0 E0            [24]  835 	push	acc
      0000B3 74 80            [12]  836 	mov	a,#0x80
      0000B5 C0 E0            [24]  837 	push	acc
      0000B7 12r00r00         [24]  838 	lcall	_printf
      0000BA 15 81            [12]  839 	dec	sp
      0000BC 15 81            [12]  840 	dec	sp
      0000BE 15 81            [12]  841 	dec	sp
                           0000C0   842 	C$main.c$29$1_0$74 ==.
                                    843 ;	main.c:29: printf("\r\n ***************************************\r\n");
      0000C0 74r00            [12]  844 	mov	a,#___str_0
      0000C2 C0 E0            [24]  845 	push	acc
      0000C4 74s00            [12]  846 	mov	a,#(___str_0 >> 8)
      0000C6 C0 E0            [24]  847 	push	acc
      0000C8 74 80            [12]  848 	mov	a,#0x80
      0000CA C0 E0            [24]  849 	push	acc
      0000CC 12r00r00         [24]  850 	lcall	_printf
      0000CF 15 81            [12]  851 	dec	sp
      0000D1 15 81            [12]  852 	dec	sp
      0000D3 15 81            [12]  853 	dec	sp
                           0000D5   854 	C$main.c$32$1_0$74 ==.
                                    855 ;	main.c:32: while(1)
      0000D5                        856 00111$:
                           0000D5   857 	C$main.c$35$2_0$75 ==.
                                    858 ;	main.c:35: CKCON0 = 0X1F;
      0000D5 75 8F 1F         [24]  859 	mov	_CKCON0,#0x1f
                           0000D8   860 	C$main.c$36$2_0$75 ==.
                                    861 ;	main.c:36: mode = getchar();
      0000D8 12r00r00         [24]  862 	lcall	_getchar
      0000DB AE 82            [24]  863 	mov	r6,dpl
      0000DD AF 83            [24]  864 	mov	r7,dph
      0000DF 90r00r00         [24]  865 	mov	dptr,#_mode
      0000E2 EE               [12]  866 	mov	a,r6
      0000E3 F0               [24]  867 	movx	@dptr,a
      0000E4 EF               [12]  868 	mov	a,r7
      0000E5 A3               [24]  869 	inc	dptr
      0000E6 F0               [24]  870 	movx	@dptr,a
                           0000E7   871 	C$main.c$37$2_0$75 ==.
                                    872 ;	main.c:37: putchar(mode);
      0000E7 8E 82            [24]  873 	mov	dpl,r6
      0000E9 8F 83            [24]  874 	mov	dph,r7
      0000EB 12r00r00         [24]  875 	lcall	_putchar
                           0000EE   876 	C$main.c$39$2_0$75 ==.
                                    877 ;	main.c:39: switch(mode)
      0000EE 90r00r00         [24]  878 	mov	dptr,#_mode
      0000F1 E0               [24]  879 	movx	a,@dptr
      0000F2 FE               [12]  880 	mov	r6,a
      0000F3 A3               [24]  881 	inc	dptr
      0000F4 E0               [24]  882 	movx	a,@dptr
      0000F5 FF               [12]  883 	mov	r7,a
      0000F6 C3               [12]  884 	clr	c
      0000F7 EE               [12]  885 	mov	a,r6
      0000F8 94 31            [12]  886 	subb	a,#0x31
      0000FA EF               [12]  887 	mov	a,r7
      0000FB 64 80            [12]  888 	xrl	a,#0x80
      0000FD 94 80            [12]  889 	subb	a,#0x80
      0000FF 50 03            [24]  890 	jnc	00127$
      000101 02r02r08         [24]  891 	ljmp	00109$
      000104                        892 00127$:
      000104 C3               [12]  893 	clr	c
      000105 74 38            [12]  894 	mov	a,#0x38
      000107 9E               [12]  895 	subb	a,r6
      000108 74 80            [12]  896 	mov	a,#(0x00 ^ 0x80)
      00010A 8F F0            [24]  897 	mov	b,r7
      00010C 63 F0 80         [24]  898 	xrl	b,#0x80
      00010F 95 F0            [12]  899 	subb	a,b
      000111 50 03            [24]  900 	jnc	00128$
      000113 02r02r08         [24]  901 	ljmp	00109$
      000116                        902 00128$:
      000116 EE               [12]  903 	mov	a,r6
      000117 24 CF            [12]  904 	add	a,#0xcf
      000119 FE               [12]  905 	mov	r6,a
      00011A 24 0A            [12]  906 	add	a,#(00129$-3-.)
      00011C 83               [24]  907 	movc	a,@a+pc
      00011D F5 82            [12]  908 	mov	dpl,a
      00011F EE               [12]  909 	mov	a,r6
      000120 24 0C            [12]  910 	add	a,#(00130$-3-.)
      000122 83               [24]  911 	movc	a,@a+pc
      000123 F5 83            [12]  912 	mov	dph,a
      000125 E4               [12]  913 	clr	a
      000126 73               [24]  914 	jmp	@a+dptr
      000127                        915 00129$:
      000127r37                     916 	.db	00101$
      000128r52                     917 	.db	00102$
      000129r6D                     918 	.db	00103$
      00012Ar88                     919 	.db	00104$
      00012BrA2                     920 	.db	00105$
      00012CrBC                     921 	.db	00106$
      00012DrD6                     922 	.db	00107$
      00012ErF0                     923 	.db	00108$
      00012F                        924 00130$:
      00012Fs01                     925 	.db	00101$>>8
      000130s01                     926 	.db	00102$>>8
      000131s01                     927 	.db	00103$>>8
      000132s01                     928 	.db	00104$>>8
      000133s01                     929 	.db	00105$>>8
      000134s01                     930 	.db	00106$>>8
      000135s01                     931 	.db	00107$>>8
      000136s01                     932 	.db	00108$>>8
                           000137   933 	C$main.c$41$3_0$76 ==.
                                    934 ;	main.c:41: case '1':
      000137                        935 00101$:
                           000137   936 	C$main.c$42$3_0$76 ==.
                                    937 ;	main.c:42: printf("PWM Mode activated\r\n");
      000137 74r56            [12]  938 	mov	a,#___str_9
      000139 C0 E0            [24]  939 	push	acc
      00013B 74s01            [12]  940 	mov	a,#(___str_9 >> 8)
      00013D C0 E0            [24]  941 	push	acc
      00013F 74 80            [12]  942 	mov	a,#0x80
      000141 C0 E0            [24]  943 	push	acc
      000143 12r00r00         [24]  944 	lcall	_printf
      000146 15 81            [12]  945 	dec	sp
      000148 15 81            [12]  946 	dec	sp
      00014A 15 81            [12]  947 	dec	sp
                           00014C   948 	C$main.c$43$3_0$76 ==.
                                    949 ;	main.c:43: PWM_Start_Init();
      00014C 12r00r00         [24]  950 	lcall	_PWM_Start_Init
                           00014F   951 	C$main.c$44$3_0$76 ==.
                                    952 ;	main.c:44: break;
      00014F 02r02r08         [24]  953 	ljmp	00109$
                           000152   954 	C$main.c$45$3_0$76 ==.
                                    955 ;	main.c:45: case '2':
      000152                        956 00102$:
                           000152   957 	C$main.c$46$3_0$76 ==.
                                    958 ;	main.c:46: printf("PWM Mode ended\r\n");
      000152 74r6B            [12]  959 	mov	a,#___str_10
      000154 C0 E0            [24]  960 	push	acc
      000156 74s01            [12]  961 	mov	a,#(___str_10 >> 8)
      000158 C0 E0            [24]  962 	push	acc
      00015A 74 80            [12]  963 	mov	a,#0x80
      00015C C0 E0            [24]  964 	push	acc
      00015E 12r00r00         [24]  965 	lcall	_printf
      000161 15 81            [12]  966 	dec	sp
      000163 15 81            [12]  967 	dec	sp
      000165 15 81            [12]  968 	dec	sp
                           000167   969 	C$main.c$47$3_0$76 ==.
                                    970 ;	main.c:47: PWM_Stop_Init();
      000167 12r00r00         [24]  971 	lcall	_PWM_Stop_Init
                           00016A   972 	C$main.c$48$3_0$76 ==.
                                    973 ;	main.c:48: break;
      00016A 02r02r08         [24]  974 	ljmp	00109$
                           00016D   975 	C$main.c$49$3_0$76 ==.
                                    976 ;	main.c:49: case '3':
      00016D                        977 00103$:
                           00016D   978 	C$main.c$50$3_0$76 ==.
                                    979 ;	main.c:50: printf("Watchdog Timer activated\r\n");
      00016D 74r7C            [12]  980 	mov	a,#___str_11
      00016F C0 E0            [24]  981 	push	acc
      000171 74s01            [12]  982 	mov	a,#(___str_11 >> 8)
      000173 C0 E0            [24]  983 	push	acc
      000175 74 80            [12]  984 	mov	a,#0x80
      000177 C0 E0            [24]  985 	push	acc
      000179 12r00r00         [24]  986 	lcall	_printf
      00017C 15 81            [12]  987 	dec	sp
      00017E 15 81            [12]  988 	dec	sp
      000180 15 81            [12]  989 	dec	sp
                           000182   990 	C$main.c$51$3_0$76 ==.
                                    991 ;	main.c:51: Watchdog_Init();
      000182 12r00r00         [24]  992 	lcall	_Watchdog_Init
                           000185   993 	C$main.c$52$3_0$76 ==.
                                    994 ;	main.c:52: break;
      000185 02r02r08         [24]  995 	ljmp	00109$
                           000188   996 	C$main.c$53$3_0$76 ==.
                                    997 ;	main.c:53: case '4':
      000188                        998 00104$:
                           000188   999 	C$main.c$54$3_0$76 ==.
                                   1000 ;	main.c:54: printf("Minimum Frequency set\r\n");
      000188 74r97            [12] 1001 	mov	a,#___str_12
      00018A C0 E0            [24] 1002 	push	acc
      00018C 74s01            [12] 1003 	mov	a,#(___str_12 >> 8)
      00018E C0 E0            [24] 1004 	push	acc
      000190 74 80            [12] 1005 	mov	a,#0x80
      000192 C0 E0            [24] 1006 	push	acc
      000194 12r00r00         [24] 1007 	lcall	_printf
      000197 15 81            [12] 1008 	dec	sp
      000199 15 81            [12] 1009 	dec	sp
      00019B 15 81            [12] 1010 	dec	sp
                           00019D  1011 	C$main.c$55$3_0$76 ==.
                                   1012 ;	main.c:55: CKRL = 0x00;
      00019D 75 97 00         [24] 1013 	mov	_CKRL,#0x00
                           0001A0  1014 	C$main.c$56$3_0$76 ==.
                                   1015 ;	main.c:56: break;
                           0001A0  1016 	C$main.c$57$3_0$76 ==.
                                   1017 ;	main.c:57: case '5':
      0001A0 80 66            [24] 1018 	sjmp	00109$
      0001A2                       1019 00105$:
                           0001A2  1020 	C$main.c$58$3_0$76 ==.
                                   1021 ;	main.c:58: printf("Maximum Frequency set\r\n");
      0001A2 74rAF            [12] 1022 	mov	a,#___str_13
      0001A4 C0 E0            [24] 1023 	push	acc
      0001A6 74s01            [12] 1024 	mov	a,#(___str_13 >> 8)
      0001A8 C0 E0            [24] 1025 	push	acc
      0001AA 74 80            [12] 1026 	mov	a,#0x80
      0001AC C0 E0            [24] 1027 	push	acc
      0001AE 12r00r00         [24] 1028 	lcall	_printf
      0001B1 15 81            [12] 1029 	dec	sp
      0001B3 15 81            [12] 1030 	dec	sp
      0001B5 15 81            [12] 1031 	dec	sp
                           0001B7  1032 	C$main.c$59$3_0$76 ==.
                                   1033 ;	main.c:59: CKRL = 0xFF;
      0001B7 75 97 FF         [24] 1034 	mov	_CKRL,#0xff
                           0001BA  1035 	C$main.c$60$3_0$76 ==.
                                   1036 ;	main.c:60: break;
                           0001BA  1037 	C$main.c$61$3_0$76 ==.
                                   1038 ;	main.c:61: case '6':
      0001BA 80 4C            [24] 1039 	sjmp	00109$
      0001BC                       1040 00106$:
                           0001BC  1041 	C$main.c$62$3_0$76 ==.
                                   1042 ;	main.c:62: printf("Idle Mode activated\r\n");
      0001BC 74rC7            [12] 1043 	mov	a,#___str_14
      0001BE C0 E0            [24] 1044 	push	acc
      0001C0 74s01            [12] 1045 	mov	a,#(___str_14 >> 8)
      0001C2 C0 E0            [24] 1046 	push	acc
      0001C4 74 80            [12] 1047 	mov	a,#0x80
      0001C6 C0 E0            [24] 1048 	push	acc
      0001C8 12r00r00         [24] 1049 	lcall	_printf
      0001CB 15 81            [12] 1050 	dec	sp
      0001CD 15 81            [12] 1051 	dec	sp
      0001CF 15 81            [12] 1052 	dec	sp
                           0001D1  1053 	C$main.c$63$3_0$76 ==.
                                   1054 ;	main.c:63: PCON = 0x01;
      0001D1 75 87 01         [24] 1055 	mov	_PCON,#0x01
                           0001D4  1056 	C$main.c$64$3_0$76 ==.
                                   1057 ;	main.c:64: break;
                           0001D4  1058 	C$main.c$65$3_0$76 ==.
                                   1059 ;	main.c:65: case '7':
      0001D4 80 32            [24] 1060 	sjmp	00109$
      0001D6                       1061 00107$:
                           0001D6  1062 	C$main.c$66$3_0$76 ==.
                                   1063 ;	main.c:66: printf("Power Down Mode activated\r\n");
      0001D6 74rDD            [12] 1064 	mov	a,#___str_15
      0001D8 C0 E0            [24] 1065 	push	acc
      0001DA 74s01            [12] 1066 	mov	a,#(___str_15 >> 8)
      0001DC C0 E0            [24] 1067 	push	acc
      0001DE 74 80            [12] 1068 	mov	a,#0x80
      0001E0 C0 E0            [24] 1069 	push	acc
      0001E2 12r00r00         [24] 1070 	lcall	_printf
      0001E5 15 81            [12] 1071 	dec	sp
      0001E7 15 81            [12] 1072 	dec	sp
      0001E9 15 81            [12] 1073 	dec	sp
                           0001EB  1074 	C$main.c$67$3_0$76 ==.
                                   1075 ;	main.c:67: PCON = 0x02;
      0001EB 75 87 02         [24] 1076 	mov	_PCON,#0x02
                           0001EE  1077 	C$main.c$68$3_0$76 ==.
                                   1078 ;	main.c:68: break;
                           0001EE  1079 	C$main.c$69$3_0$76 ==.
                                   1080 ;	main.c:69: case '8':
      0001EE 80 18            [24] 1081 	sjmp	00109$
      0001F0                       1082 00108$:
                           0001F0  1083 	C$main.c$70$3_0$76 ==.
                                   1084 ;	main.c:70: printf("High Speed Mode activated\r\n");
      0001F0 74rF9            [12] 1085 	mov	a,#___str_16
      0001F2 C0 E0            [24] 1086 	push	acc
      0001F4 74s01            [12] 1087 	mov	a,#(___str_16 >> 8)
      0001F6 C0 E0            [24] 1088 	push	acc
      0001F8 74 80            [12] 1089 	mov	a,#0x80
      0001FA C0 E0            [24] 1090 	push	acc
      0001FC 12r00r00         [24] 1091 	lcall	_printf
      0001FF 15 81            [12] 1092 	dec	sp
      000201 15 81            [12] 1093 	dec	sp
      000203 15 81            [12] 1094 	dec	sp
                           000205  1095 	C$main.c$71$3_0$76 ==.
                                   1096 ;	main.c:71: Highspeed_Toggle_Init();
      000205 12r00r00         [24] 1097 	lcall	_Highspeed_Toggle_Init
                           000208  1098 	C$main.c$74$2_0$75 ==.
                                   1099 ;	main.c:74: }
      000208                       1100 00109$:
                           000208  1101 	C$main.c$75$2_0$75 ==.
                                   1102 ;	main.c:75: mode ='0';
      000208 90r00r00         [24] 1103 	mov	dptr,#_mode
      00020B 74 30            [12] 1104 	mov	a,#0x30
      00020D F0               [24] 1105 	movx	@dptr,a
      00020E E4               [12] 1106 	clr	a
      00020F A3               [24] 1107 	inc	dptr
      000210 F0               [24] 1108 	movx	@dptr,a
      000211 02r00rD5         [24] 1109 	ljmp	00111$
                           000214  1110 	C$main.c$77$1_0$74 ==.
                                   1111 ;	main.c:77: }
                           000214  1112 	C$main.c$77$1_0$74 ==.
                           000214  1113 	XG$main$0$0 ==.
      000214 22               [24] 1114 	ret
                                   1115 	.area CSEG    (CODE)
                                   1116 	.area CONST   (CODE)
                           000000  1117 Fmain$__str_0$0_0$0 == .
                                   1118 	.area CONST   (CODE)
      000000                       1119 ___str_0:
      000000 0D                    1120 	.db 0x0d
      000001 0A                    1121 	.db 0x0a
      000002 20 2A 2A 2A 2A 2A 2A  1122 	.ascii " ***************************************"
             2A 2A 2A 2A 2A 2A 2A
             2A 2A 2A 2A 2A 2A 2A
             2A 2A 2A 2A 2A 2A 2A
             2A 2A 2A 2A 2A 2A 2A
             2A 2A 2A 2A 2A
      00002A 0D                    1123 	.db 0x0d
      00002B 0A                    1124 	.db 0x0a
      00002C 00                    1125 	.db 0x00
                                   1126 	.area CSEG    (CODE)
                           000215  1127 Fmain$__str_1$0_0$0 == .
                                   1128 	.area CONST   (CODE)
      00002D                       1129 ___str_1:
      00002D 0D                    1130 	.db 0x0d
      00002E 0A                    1131 	.db 0x0a
      00002F 20 50 72 65 73 73 20  1132 	.ascii " Press 1 to start PWM signal"
             31 20 74 6F 20 73 74
             61 72 74 20 50 57 4D
             20 73 69 67 6E 61 6C
      00004B 0D                    1133 	.db 0x0d
      00004C 0A                    1134 	.db 0x0a
      00004D 00                    1135 	.db 0x00
                                   1136 	.area CSEG    (CODE)
                           000215  1137 Fmain$__str_2$0_0$0 == .
                                   1138 	.area CONST   (CODE)
      00004E                       1139 ___str_2:
      00004E 0D                    1140 	.db 0x0d
      00004F 0A                    1141 	.db 0x0a
      000050 20 50 72 65 73 73 20  1142 	.ascii " Press 2 to stop PWM signal"
             32 20 74 6F 20 73 74
             6F 70 20 50 57 4D 20
             73 69 67 6E 61 6C
      00006B 0D                    1143 	.db 0x0d
      00006C 0A                    1144 	.db 0x0a
      00006D 00                    1145 	.db 0x00
                                   1146 	.area CSEG    (CODE)
                           000215  1147 Fmain$__str_3$0_0$0 == .
                                   1148 	.area CONST   (CODE)
      00006E                       1149 ___str_3:
      00006E 0D                    1150 	.db 0x0d
      00006F 0A                    1151 	.db 0x0a
      000070 20 50 72 65 73 73 20  1152 	.ascii " Press 3 to start Watch Dog Timer"
             33 20 74 6F 20 73 74
             61 72 74 20 57 61 74
             63 68 20 44 6F 67 20
             54 69 6D 65 72
      000091 0D                    1153 	.db 0x0d
      000092 0A                    1154 	.db 0x0a
      000093 00                    1155 	.db 0x00
                                   1156 	.area CSEG    (CODE)
                           000215  1157 Fmain$__str_4$0_0$0 == .
                                   1158 	.area CONST   (CODE)
      000094                       1159 ___str_4:
      000094 0D                    1160 	.db 0x0d
      000095 0A                    1161 	.db 0x0a
      000096 20 50 72 65 73 73 20  1162 	.ascii " Press 4 to set the minimum frequency"
             34 20 74 6F 20 73 65
             74 20 74 68 65 20 6D
             69 6E 69 6D 75 6D 20
             66 72 65 71 75 65 6E
             63 79
      0000BB 0D                    1163 	.db 0x0d
      0000BC 0A                    1164 	.db 0x0a
      0000BD 00                    1165 	.db 0x00
                                   1166 	.area CSEG    (CODE)
                           000215  1167 Fmain$__str_5$0_0$0 == .
                                   1168 	.area CONST   (CODE)
      0000BE                       1169 ___str_5:
      0000BE 0D                    1170 	.db 0x0d
      0000BF 0A                    1171 	.db 0x0a
      0000C0 20 50 72 65 73 73 20  1172 	.ascii " Press 5 to set the maximum frequency"
             35 20 74 6F 20 73 65
             74 20 74 68 65 20 6D
             61 78 69 6D 75 6D 20
             66 72 65 71 75 65 6E
             63 79
      0000E5 0D                    1173 	.db 0x0d
      0000E6 0A                    1174 	.db 0x0a
      0000E7 00                    1175 	.db 0x00
                                   1176 	.area CSEG    (CODE)
                           000215  1177 Fmain$__str_6$0_0$0 == .
                                   1178 	.area CONST   (CODE)
      0000E8                       1179 ___str_6:
      0000E8 0D                    1180 	.db 0x0d
      0000E9 0A                    1181 	.db 0x0a
      0000EA 20 50 72 65 73 73 20  1182 	.ascii " Press 6 to go to Idle Mode"
             36 20 74 6F 20 67 6F
             20 74 6F 20 49 64 6C
             65 20 4D 6F 64 65
      000105 0D                    1183 	.db 0x0d
      000106 0A                    1184 	.db 0x0a
      000107 00                    1185 	.db 0x00
                                   1186 	.area CSEG    (CODE)
                           000215  1187 Fmain$__str_7$0_0$0 == .
                                   1188 	.area CONST   (CODE)
      000108                       1189 ___str_7:
      000108 0D                    1190 	.db 0x0d
      000109 0A                    1191 	.db 0x0a
      00010A 20 50 72 65 73 73 20  1192 	.ascii " Press 7 to set to Power Down Mode"
             37 20 74 6F 20 73 65
             74 20 74 6F 20 50 6F
             77 65 72 20 44 6F 77
             6E 20 4D 6F 64 65
      00012C 0D                    1193 	.db 0x0d
      00012D 0A                    1194 	.db 0x0a
      00012E 00                    1195 	.db 0x00
                                   1196 	.area CSEG    (CODE)
                           000215  1197 Fmain$__str_8$0_0$0 == .
                                   1198 	.area CONST   (CODE)
      00012F                       1199 ___str_8:
      00012F 0D                    1200 	.db 0x0d
      000130 0A                    1201 	.db 0x0a
      000131 20 50 72 65 73 73 20  1202 	.ascii " Press 8 to set to High Speed Mode"
             38 20 74 6F 20 73 65
             74 20 74 6F 20 48 69
             67 68 20 53 70 65 65
             64 20 4D 6F 64 65
      000153 0D                    1203 	.db 0x0d
      000154 0A                    1204 	.db 0x0a
      000155 00                    1205 	.db 0x00
                                   1206 	.area CSEG    (CODE)
                           000215  1207 Fmain$__str_9$0_0$0 == .
                                   1208 	.area CONST   (CODE)
      000156                       1209 ___str_9:
      000156 50 57 4D 20 4D 6F 64  1210 	.ascii "PWM Mode activated"
             65 20 61 63 74 69 76
             61 74 65 64
      000168 0D                    1211 	.db 0x0d
      000169 0A                    1212 	.db 0x0a
      00016A 00                    1213 	.db 0x00
                                   1214 	.area CSEG    (CODE)
                           000215  1215 Fmain$__str_10$0_0$0 == .
                                   1216 	.area CONST   (CODE)
      00016B                       1217 ___str_10:
      00016B 50 57 4D 20 4D 6F 64  1218 	.ascii "PWM Mode ended"
             65 20 65 6E 64 65 64
      000179 0D                    1219 	.db 0x0d
      00017A 0A                    1220 	.db 0x0a
      00017B 00                    1221 	.db 0x00
                                   1222 	.area CSEG    (CODE)
                           000215  1223 Fmain$__str_11$0_0$0 == .
                                   1224 	.area CONST   (CODE)
      00017C                       1225 ___str_11:
      00017C 57 61 74 63 68 64 6F  1226 	.ascii "Watchdog Timer activated"
             67 20 54 69 6D 65 72
             20 61 63 74 69 76 61
             74 65 64
      000194 0D                    1227 	.db 0x0d
      000195 0A                    1228 	.db 0x0a
      000196 00                    1229 	.db 0x00
                                   1230 	.area CSEG    (CODE)
                           000215  1231 Fmain$__str_12$0_0$0 == .
                                   1232 	.area CONST   (CODE)
      000197                       1233 ___str_12:
      000197 4D 69 6E 69 6D 75 6D  1234 	.ascii "Minimum Frequency set"
             20 46 72 65 71 75 65
             6E 63 79 20 73 65 74
      0001AC 0D                    1235 	.db 0x0d
      0001AD 0A                    1236 	.db 0x0a
      0001AE 00                    1237 	.db 0x00
                                   1238 	.area CSEG    (CODE)
                           000215  1239 Fmain$__str_13$0_0$0 == .
                                   1240 	.area CONST   (CODE)
      0001AF                       1241 ___str_13:
      0001AF 4D 61 78 69 6D 75 6D  1242 	.ascii "Maximum Frequency set"
             20 46 72 65 71 75 65
             6E 63 79 20 73 65 74
      0001C4 0D                    1243 	.db 0x0d
      0001C5 0A                    1244 	.db 0x0a
      0001C6 00                    1245 	.db 0x00
                                   1246 	.area CSEG    (CODE)
                           000215  1247 Fmain$__str_14$0_0$0 == .
                                   1248 	.area CONST   (CODE)
      0001C7                       1249 ___str_14:
      0001C7 49 64 6C 65 20 4D 6F  1250 	.ascii "Idle Mode activated"
             64 65 20 61 63 74 69
             76 61 74 65 64
      0001DA 0D                    1251 	.db 0x0d
      0001DB 0A                    1252 	.db 0x0a
      0001DC 00                    1253 	.db 0x00
                                   1254 	.area CSEG    (CODE)
                           000215  1255 Fmain$__str_15$0_0$0 == .
                                   1256 	.area CONST   (CODE)
      0001DD                       1257 ___str_15:
      0001DD 50 6F 77 65 72 20 44  1258 	.ascii "Power Down Mode activated"
             6F 77 6E 20 4D 6F 64
             65 20 61 63 74 69 76
             61 74 65 64
      0001F6 0D                    1259 	.db 0x0d
      0001F7 0A                    1260 	.db 0x0a
      0001F8 00                    1261 	.db 0x00
                                   1262 	.area CSEG    (CODE)
                           000215  1263 Fmain$__str_16$0_0$0 == .
                                   1264 	.area CONST   (CODE)
      0001F9                       1265 ___str_16:
      0001F9 48 69 67 68 20 53 70  1266 	.ascii "High Speed Mode activated"
             65 65 64 20 4D 6F 64
             65 20 61 63 74 69 76
             61 74 65 64
      000212 0D                    1267 	.db 0x0d
      000213 0A                    1268 	.db 0x0a
      000214 00                    1269 	.db 0x00
                                   1270 	.area CSEG    (CODE)
                                   1271 	.area XINIT   (CODE)
                                   1272 	.area CABS    (ABS,CODE)
