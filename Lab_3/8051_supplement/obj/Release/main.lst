                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _putchar
                                     13 	.globl _getchar
                                     14 	.globl _Highspeed_Toggle_Init
                                     15 	.globl _Watchdog_Init
                                     16 	.globl _PWM_Stop_Init
                                     17 	.globl _PWM_Start_Init
                                     18 	.globl _Serial_Init
                                     19 	.globl _printf
                                     20 	.globl _CY
                                     21 	.globl _AC
                                     22 	.globl _F0
                                     23 	.globl _RS1
                                     24 	.globl _RS0
                                     25 	.globl _OV
                                     26 	.globl _F1
                                     27 	.globl _P
                                     28 	.globl _PS
                                     29 	.globl _PT1
                                     30 	.globl _PX1
                                     31 	.globl _PT0
                                     32 	.globl _PX0
                                     33 	.globl _RD
                                     34 	.globl _WR
                                     35 	.globl _T1
                                     36 	.globl _T0
                                     37 	.globl _INT1
                                     38 	.globl _INT0
                                     39 	.globl _TXD
                                     40 	.globl _RXD
                                     41 	.globl _P3_7
                                     42 	.globl _P3_6
                                     43 	.globl _P3_5
                                     44 	.globl _P3_4
                                     45 	.globl _P3_3
                                     46 	.globl _P3_2
                                     47 	.globl _P3_1
                                     48 	.globl _P3_0
                                     49 	.globl _EA
                                     50 	.globl _ES
                                     51 	.globl _ET1
                                     52 	.globl _EX1
                                     53 	.globl _ET0
                                     54 	.globl _EX0
                                     55 	.globl _P2_7
                                     56 	.globl _P2_6
                                     57 	.globl _P2_5
                                     58 	.globl _P2_4
                                     59 	.globl _P2_3
                                     60 	.globl _P2_2
                                     61 	.globl _P2_1
                                     62 	.globl _P2_0
                                     63 	.globl _SM0
                                     64 	.globl _SM1
                                     65 	.globl _SM2
                                     66 	.globl _REN
                                     67 	.globl _TB8
                                     68 	.globl _RB8
                                     69 	.globl _TI
                                     70 	.globl _RI
                                     71 	.globl _P1_7
                                     72 	.globl _P1_6
                                     73 	.globl _P1_5
                                     74 	.globl _P1_4
                                     75 	.globl _P1_3
                                     76 	.globl _P1_2
                                     77 	.globl _P1_1
                                     78 	.globl _P1_0
                                     79 	.globl _TF1
                                     80 	.globl _TR1
                                     81 	.globl _TF0
                                     82 	.globl _TR0
                                     83 	.globl _IE1
                                     84 	.globl _IT1
                                     85 	.globl _IE0
                                     86 	.globl _IT0
                                     87 	.globl _P0_7
                                     88 	.globl _P0_6
                                     89 	.globl _P0_5
                                     90 	.globl _P0_4
                                     91 	.globl _P0_3
                                     92 	.globl _P0_2
                                     93 	.globl _P0_1
                                     94 	.globl _P0_0
                                     95 	.globl _P5_7
                                     96 	.globl _P5_6
                                     97 	.globl _P5_5
                                     98 	.globl _P5_4
                                     99 	.globl _P5_3
                                    100 	.globl _P5_2
                                    101 	.globl _P5_1
                                    102 	.globl _P5_0
                                    103 	.globl _P4_7
                                    104 	.globl _P4_6
                                    105 	.globl _P4_5
                                    106 	.globl _P4_4
                                    107 	.globl _P4_3
                                    108 	.globl _P4_2
                                    109 	.globl _P4_1
                                    110 	.globl _P4_0
                                    111 	.globl _PX0L
                                    112 	.globl _PT0L
                                    113 	.globl _PX1L
                                    114 	.globl _PT1L
                                    115 	.globl _PSL
                                    116 	.globl _PT2L
                                    117 	.globl _PPCL
                                    118 	.globl _EC
                                    119 	.globl _CCF0
                                    120 	.globl _CCF1
                                    121 	.globl _CCF2
                                    122 	.globl _CCF3
                                    123 	.globl _CCF4
                                    124 	.globl _CR
                                    125 	.globl _CF
                                    126 	.globl _TF2
                                    127 	.globl _EXF2
                                    128 	.globl _RCLK
                                    129 	.globl _TCLK
                                    130 	.globl _EXEN2
                                    131 	.globl _TR2
                                    132 	.globl _C_T2
                                    133 	.globl _CP_RL2
                                    134 	.globl _T2CON_7
                                    135 	.globl _T2CON_6
                                    136 	.globl _T2CON_5
                                    137 	.globl _T2CON_4
                                    138 	.globl _T2CON_3
                                    139 	.globl _T2CON_2
                                    140 	.globl _T2CON_1
                                    141 	.globl _T2CON_0
                                    142 	.globl _PT2
                                    143 	.globl _ET2
                                    144 	.globl _B
                                    145 	.globl _ACC
                                    146 	.globl _PSW
                                    147 	.globl _IP
                                    148 	.globl _P3
                                    149 	.globl _IE
                                    150 	.globl _P2
                                    151 	.globl _SBUF
                                    152 	.globl _SCON
                                    153 	.globl _P1
                                    154 	.globl _TH1
                                    155 	.globl _TH0
                                    156 	.globl _TL1
                                    157 	.globl _TL0
                                    158 	.globl _TMOD
                                    159 	.globl _TCON
                                    160 	.globl _PCON
                                    161 	.globl _DPH
                                    162 	.globl _DPL
                                    163 	.globl _SP
                                    164 	.globl _P0
                                    165 	.globl _EECON
                                    166 	.globl _KBF
                                    167 	.globl _KBE
                                    168 	.globl _KBLS
                                    169 	.globl _BRL
                                    170 	.globl _BDRCON
                                    171 	.globl _T2MOD
                                    172 	.globl _SPDAT
                                    173 	.globl _SPSTA
                                    174 	.globl _SPCON
                                    175 	.globl _SADEN
                                    176 	.globl _SADDR
                                    177 	.globl _WDTPRG
                                    178 	.globl _WDTRST
                                    179 	.globl _P5
                                    180 	.globl _P4
                                    181 	.globl _IPH1
                                    182 	.globl _IPL1
                                    183 	.globl _IPH0
                                    184 	.globl _IPL0
                                    185 	.globl _IEN1
                                    186 	.globl _IEN0
                                    187 	.globl _CMOD
                                    188 	.globl _CL
                                    189 	.globl _CH
                                    190 	.globl _CCON
                                    191 	.globl _CCAPM4
                                    192 	.globl _CCAPM3
                                    193 	.globl _CCAPM2
                                    194 	.globl _CCAPM1
                                    195 	.globl _CCAPM0
                                    196 	.globl _CCAP4L
                                    197 	.globl _CCAP3L
                                    198 	.globl _CCAP2L
                                    199 	.globl _CCAP1L
                                    200 	.globl _CCAP0L
                                    201 	.globl _CCAP4H
                                    202 	.globl _CCAP3H
                                    203 	.globl _CCAP2H
                                    204 	.globl _CCAP1H
                                    205 	.globl _CCAP0H
                                    206 	.globl _CKCON1
                                    207 	.globl _CKCON0
                                    208 	.globl _CKRL
                                    209 	.globl _AUXR1
                                    210 	.globl _AUXR
                                    211 	.globl _TH2
                                    212 	.globl _TL2
                                    213 	.globl _RCAP2H
                                    214 	.globl _RCAP2L
                                    215 	.globl _T2CON
                                    216 	.globl _mode
                                    217 ;--------------------------------------------------------
                                    218 ; special function registers
                                    219 ;--------------------------------------------------------
                                    220 	.area RSEG    (ABS,DATA)
      000000                        221 	.org 0x0000
                           0000C8   222 _T2CON	=	0x00c8
                           0000CA   223 _RCAP2L	=	0x00ca
                           0000CB   224 _RCAP2H	=	0x00cb
                           0000CC   225 _TL2	=	0x00cc
                           0000CD   226 _TH2	=	0x00cd
                           00008E   227 _AUXR	=	0x008e
                           0000A2   228 _AUXR1	=	0x00a2
                           000097   229 _CKRL	=	0x0097
                           00008F   230 _CKCON0	=	0x008f
                           0000AF   231 _CKCON1	=	0x00af
                           0000FA   232 _CCAP0H	=	0x00fa
                           0000FB   233 _CCAP1H	=	0x00fb
                           0000FC   234 _CCAP2H	=	0x00fc
                           0000FD   235 _CCAP3H	=	0x00fd
                           0000FE   236 _CCAP4H	=	0x00fe
                           0000EA   237 _CCAP0L	=	0x00ea
                           0000EB   238 _CCAP1L	=	0x00eb
                           0000EC   239 _CCAP2L	=	0x00ec
                           0000ED   240 _CCAP3L	=	0x00ed
                           0000EE   241 _CCAP4L	=	0x00ee
                           0000DA   242 _CCAPM0	=	0x00da
                           0000DB   243 _CCAPM1	=	0x00db
                           0000DC   244 _CCAPM2	=	0x00dc
                           0000DD   245 _CCAPM3	=	0x00dd
                           0000DE   246 _CCAPM4	=	0x00de
                           0000D8   247 _CCON	=	0x00d8
                           0000F9   248 _CH	=	0x00f9
                           0000E9   249 _CL	=	0x00e9
                           0000D9   250 _CMOD	=	0x00d9
                           0000A8   251 _IEN0	=	0x00a8
                           0000B1   252 _IEN1	=	0x00b1
                           0000B8   253 _IPL0	=	0x00b8
                           0000B7   254 _IPH0	=	0x00b7
                           0000B2   255 _IPL1	=	0x00b2
                           0000B3   256 _IPH1	=	0x00b3
                           0000C0   257 _P4	=	0x00c0
                           0000E8   258 _P5	=	0x00e8
                           0000A6   259 _WDTRST	=	0x00a6
                           0000A7   260 _WDTPRG	=	0x00a7
                           0000A9   261 _SADDR	=	0x00a9
                           0000B9   262 _SADEN	=	0x00b9
                           0000C3   263 _SPCON	=	0x00c3
                           0000C4   264 _SPSTA	=	0x00c4
                           0000C5   265 _SPDAT	=	0x00c5
                           0000C9   266 _T2MOD	=	0x00c9
                           00009B   267 _BDRCON	=	0x009b
                           00009A   268 _BRL	=	0x009a
                           00009C   269 _KBLS	=	0x009c
                           00009D   270 _KBE	=	0x009d
                           00009E   271 _KBF	=	0x009e
                           0000D2   272 _EECON	=	0x00d2
                           000080   273 _P0	=	0x0080
                           000081   274 _SP	=	0x0081
                           000082   275 _DPL	=	0x0082
                           000083   276 _DPH	=	0x0083
                           000087   277 _PCON	=	0x0087
                           000088   278 _TCON	=	0x0088
                           000089   279 _TMOD	=	0x0089
                           00008A   280 _TL0	=	0x008a
                           00008B   281 _TL1	=	0x008b
                           00008C   282 _TH0	=	0x008c
                           00008D   283 _TH1	=	0x008d
                           000090   284 _P1	=	0x0090
                           000098   285 _SCON	=	0x0098
                           000099   286 _SBUF	=	0x0099
                           0000A0   287 _P2	=	0x00a0
                           0000A8   288 _IE	=	0x00a8
                           0000B0   289 _P3	=	0x00b0
                           0000B8   290 _IP	=	0x00b8
                           0000D0   291 _PSW	=	0x00d0
                           0000E0   292 _ACC	=	0x00e0
                           0000F0   293 _B	=	0x00f0
                                    294 ;--------------------------------------------------------
                                    295 ; special function bits
                                    296 ;--------------------------------------------------------
                                    297 	.area RSEG    (ABS,DATA)
      000000                        298 	.org 0x0000
                           0000AD   299 _ET2	=	0x00ad
                           0000BD   300 _PT2	=	0x00bd
                           0000C8   301 _T2CON_0	=	0x00c8
                           0000C9   302 _T2CON_1	=	0x00c9
                           0000CA   303 _T2CON_2	=	0x00ca
                           0000CB   304 _T2CON_3	=	0x00cb
                           0000CC   305 _T2CON_4	=	0x00cc
                           0000CD   306 _T2CON_5	=	0x00cd
                           0000CE   307 _T2CON_6	=	0x00ce
                           0000CF   308 _T2CON_7	=	0x00cf
                           0000C8   309 _CP_RL2	=	0x00c8
                           0000C9   310 _C_T2	=	0x00c9
                           0000CA   311 _TR2	=	0x00ca
                           0000CB   312 _EXEN2	=	0x00cb
                           0000CC   313 _TCLK	=	0x00cc
                           0000CD   314 _RCLK	=	0x00cd
                           0000CE   315 _EXF2	=	0x00ce
                           0000CF   316 _TF2	=	0x00cf
                           0000DF   317 _CF	=	0x00df
                           0000DE   318 _CR	=	0x00de
                           0000DC   319 _CCF4	=	0x00dc
                           0000DB   320 _CCF3	=	0x00db
                           0000DA   321 _CCF2	=	0x00da
                           0000D9   322 _CCF1	=	0x00d9
                           0000D8   323 _CCF0	=	0x00d8
                           0000AE   324 _EC	=	0x00ae
                           0000BE   325 _PPCL	=	0x00be
                           0000BD   326 _PT2L	=	0x00bd
                           0000BC   327 _PSL	=	0x00bc
                           0000BB   328 _PT1L	=	0x00bb
                           0000BA   329 _PX1L	=	0x00ba
                           0000B9   330 _PT0L	=	0x00b9
                           0000B8   331 _PX0L	=	0x00b8
                           0000C0   332 _P4_0	=	0x00c0
                           0000C1   333 _P4_1	=	0x00c1
                           0000C2   334 _P4_2	=	0x00c2
                           0000C3   335 _P4_3	=	0x00c3
                           0000C4   336 _P4_4	=	0x00c4
                           0000C5   337 _P4_5	=	0x00c5
                           0000C6   338 _P4_6	=	0x00c6
                           0000C7   339 _P4_7	=	0x00c7
                           0000E8   340 _P5_0	=	0x00e8
                           0000E9   341 _P5_1	=	0x00e9
                           0000EA   342 _P5_2	=	0x00ea
                           0000EB   343 _P5_3	=	0x00eb
                           0000EC   344 _P5_4	=	0x00ec
                           0000ED   345 _P5_5	=	0x00ed
                           0000EE   346 _P5_6	=	0x00ee
                           0000EF   347 _P5_7	=	0x00ef
                           000080   348 _P0_0	=	0x0080
                           000081   349 _P0_1	=	0x0081
                           000082   350 _P0_2	=	0x0082
                           000083   351 _P0_3	=	0x0083
                           000084   352 _P0_4	=	0x0084
                           000085   353 _P0_5	=	0x0085
                           000086   354 _P0_6	=	0x0086
                           000087   355 _P0_7	=	0x0087
                           000088   356 _IT0	=	0x0088
                           000089   357 _IE0	=	0x0089
                           00008A   358 _IT1	=	0x008a
                           00008B   359 _IE1	=	0x008b
                           00008C   360 _TR0	=	0x008c
                           00008D   361 _TF0	=	0x008d
                           00008E   362 _TR1	=	0x008e
                           00008F   363 _TF1	=	0x008f
                           000090   364 _P1_0	=	0x0090
                           000091   365 _P1_1	=	0x0091
                           000092   366 _P1_2	=	0x0092
                           000093   367 _P1_3	=	0x0093
                           000094   368 _P1_4	=	0x0094
                           000095   369 _P1_5	=	0x0095
                           000096   370 _P1_6	=	0x0096
                           000097   371 _P1_7	=	0x0097
                           000098   372 _RI	=	0x0098
                           000099   373 _TI	=	0x0099
                           00009A   374 _RB8	=	0x009a
                           00009B   375 _TB8	=	0x009b
                           00009C   376 _REN	=	0x009c
                           00009D   377 _SM2	=	0x009d
                           00009E   378 _SM1	=	0x009e
                           00009F   379 _SM0	=	0x009f
                           0000A0   380 _P2_0	=	0x00a0
                           0000A1   381 _P2_1	=	0x00a1
                           0000A2   382 _P2_2	=	0x00a2
                           0000A3   383 _P2_3	=	0x00a3
                           0000A4   384 _P2_4	=	0x00a4
                           0000A5   385 _P2_5	=	0x00a5
                           0000A6   386 _P2_6	=	0x00a6
                           0000A7   387 _P2_7	=	0x00a7
                           0000A8   388 _EX0	=	0x00a8
                           0000A9   389 _ET0	=	0x00a9
                           0000AA   390 _EX1	=	0x00aa
                           0000AB   391 _ET1	=	0x00ab
                           0000AC   392 _ES	=	0x00ac
                           0000AF   393 _EA	=	0x00af
                           0000B0   394 _P3_0	=	0x00b0
                           0000B1   395 _P3_1	=	0x00b1
                           0000B2   396 _P3_2	=	0x00b2
                           0000B3   397 _P3_3	=	0x00b3
                           0000B4   398 _P3_4	=	0x00b4
                           0000B5   399 _P3_5	=	0x00b5
                           0000B6   400 _P3_6	=	0x00b6
                           0000B7   401 _P3_7	=	0x00b7
                           0000B0   402 _RXD	=	0x00b0
                           0000B1   403 _TXD	=	0x00b1
                           0000B2   404 _INT0	=	0x00b2
                           0000B3   405 _INT1	=	0x00b3
                           0000B4   406 _T0	=	0x00b4
                           0000B5   407 _T1	=	0x00b5
                           0000B6   408 _WR	=	0x00b6
                           0000B7   409 _RD	=	0x00b7
                           0000B8   410 _PX0	=	0x00b8
                           0000B9   411 _PT0	=	0x00b9
                           0000BA   412 _PX1	=	0x00ba
                           0000BB   413 _PT1	=	0x00bb
                           0000BC   414 _PS	=	0x00bc
                           0000D0   415 _P	=	0x00d0
                           0000D1   416 _F1	=	0x00d1
                           0000D2   417 _OV	=	0x00d2
                           0000D3   418 _RS0	=	0x00d3
                           0000D4   419 _RS1	=	0x00d4
                           0000D5   420 _F0	=	0x00d5
                           0000D6   421 _AC	=	0x00d6
                           0000D7   422 _CY	=	0x00d7
                                    423 ;--------------------------------------------------------
                                    424 ; overlayable register banks
                                    425 ;--------------------------------------------------------
                                    426 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        427 	.ds 8
                                    428 ;--------------------------------------------------------
                                    429 ; internal ram data
                                    430 ;--------------------------------------------------------
                                    431 	.area DSEG    (DATA)
                                    432 ;--------------------------------------------------------
                                    433 ; overlayable items in internal ram
                                    434 ;--------------------------------------------------------
                                    435 ;--------------------------------------------------------
                                    436 ; Stack segment in internal ram
                                    437 ;--------------------------------------------------------
                                    438 	.area	SSEG
      000000                        439 __start__stack:
      000000                        440 	.ds	1
                                    441 
                                    442 ;--------------------------------------------------------
                                    443 ; indirectly addressable internal ram data
                                    444 ;--------------------------------------------------------
                                    445 	.area ISEG    (DATA)
                                    446 ;--------------------------------------------------------
                                    447 ; absolute internal ram data
                                    448 ;--------------------------------------------------------
                                    449 	.area IABS    (ABS,DATA)
                                    450 	.area IABS    (ABS,DATA)
                                    451 ;--------------------------------------------------------
                                    452 ; bit data
                                    453 ;--------------------------------------------------------
                                    454 	.area BSEG    (BIT)
                                    455 ;--------------------------------------------------------
                                    456 ; paged external ram data
                                    457 ;--------------------------------------------------------
                                    458 	.area PSEG    (PAG,XDATA)
                                    459 ;--------------------------------------------------------
                                    460 ; external ram data
                                    461 ;--------------------------------------------------------
                                    462 	.area XSEG    (XDATA)
      000000                        463 _mode::
      000000                        464 	.ds 2
                                    465 ;--------------------------------------------------------
                                    466 ; absolute external ram data
                                    467 ;--------------------------------------------------------
                                    468 	.area XABS    (ABS,XDATA)
                                    469 ;--------------------------------------------------------
                                    470 ; external initialized ram data
                                    471 ;--------------------------------------------------------
                                    472 	.area XISEG   (XDATA)
                                    473 	.area HOME    (CODE)
                                    474 	.area GSINIT0 (CODE)
                                    475 	.area GSINIT1 (CODE)
                                    476 	.area GSINIT2 (CODE)
                                    477 	.area GSINIT3 (CODE)
                                    478 	.area GSINIT4 (CODE)
                                    479 	.area GSINIT5 (CODE)
                                    480 	.area GSINIT  (CODE)
                                    481 	.area GSFINAL (CODE)
                                    482 	.area CSEG    (CODE)
                                    483 ;--------------------------------------------------------
                                    484 ; interrupt vector
                                    485 ;--------------------------------------------------------
                                    486 	.area HOME    (CODE)
      000000                        487 __interrupt_vect:
      000000 02r00r00         [24]  488 	ljmp	__sdcc_gsinit_startup
                                    489 ;--------------------------------------------------------
                                    490 ; global & static initialisations
                                    491 ;--------------------------------------------------------
                                    492 	.area HOME    (CODE)
                                    493 	.area GSINIT  (CODE)
                                    494 	.area GSFINAL (CODE)
                                    495 	.area GSINIT  (CODE)
                                    496 	.globl __sdcc_gsinit_startup
                                    497 	.globl __sdcc_program_startup
                                    498 	.globl __start__stack
                                    499 	.globl __mcs51_genXINIT
                                    500 	.globl __mcs51_genXRAMCLEAR
                                    501 	.globl __mcs51_genRAMCLEAR
                                    502 	.area GSFINAL (CODE)
      000000 02r00r03         [24]  503 	ljmp	__sdcc_program_startup
                                    504 ;--------------------------------------------------------
                                    505 ; Home
                                    506 ;--------------------------------------------------------
                                    507 	.area HOME    (CODE)
                                    508 	.area HOME    (CODE)
      000003                        509 __sdcc_program_startup:
      000003 02r00r00         [24]  510 	ljmp	_main
                                    511 ;	return from main will return to caller
                                    512 ;--------------------------------------------------------
                                    513 ; code
                                    514 ;--------------------------------------------------------
                                    515 	.area CSEG    (CODE)
                                    516 ;------------------------------------------------------------
                                    517 ;Allocation info for local variables in function 'main'
                                    518 ;------------------------------------------------------------
                                    519 ;	main.c:16: void main(void)
                                    520 ;	-----------------------------------------
                                    521 ;	 function main
                                    522 ;	-----------------------------------------
      000000                        523 _main:
                           000007   524 	ar7 = 0x07
                           000006   525 	ar6 = 0x06
                           000005   526 	ar5 = 0x05
                           000004   527 	ar4 = 0x04
                           000003   528 	ar3 = 0x03
                           000002   529 	ar2 = 0x02
                           000001   530 	ar1 = 0x01
                           000000   531 	ar0 = 0x00
                                    532 ;	main.c:18: Serial_Init();
      000000 12r00r00         [24]  533 	lcall	_Serial_Init
                                    534 ;	main.c:20: printf("\r\n ***************************************\r\n");
      000003 74r00            [12]  535 	mov	a,#___str_0
      000005 C0 E0            [24]  536 	push	acc
      000007 74s00            [12]  537 	mov	a,#(___str_0 >> 8)
      000009 C0 E0            [24]  538 	push	acc
      00000B 74 80            [12]  539 	mov	a,#0x80
      00000D C0 E0            [24]  540 	push	acc
      00000F 12r00r00         [24]  541 	lcall	_printf
      000012 15 81            [12]  542 	dec	sp
      000014 15 81            [12]  543 	dec	sp
      000016 15 81            [12]  544 	dec	sp
                                    545 ;	main.c:21: printf("\r\n Press 1 to start PWM signal\r\n");
      000018 74r2D            [12]  546 	mov	a,#___str_1
      00001A C0 E0            [24]  547 	push	acc
      00001C 74s00            [12]  548 	mov	a,#(___str_1 >> 8)
      00001E C0 E0            [24]  549 	push	acc
      000020 74 80            [12]  550 	mov	a,#0x80
      000022 C0 E0            [24]  551 	push	acc
      000024 12r00r00         [24]  552 	lcall	_printf
      000027 15 81            [12]  553 	dec	sp
      000029 15 81            [12]  554 	dec	sp
      00002B 15 81            [12]  555 	dec	sp
                                    556 ;	main.c:22: printf("\r\n Press 2 to stop PWM signal\r\n");
      00002D 74r4E            [12]  557 	mov	a,#___str_2
      00002F C0 E0            [24]  558 	push	acc
      000031 74s00            [12]  559 	mov	a,#(___str_2 >> 8)
      000033 C0 E0            [24]  560 	push	acc
      000035 74 80            [12]  561 	mov	a,#0x80
      000037 C0 E0            [24]  562 	push	acc
      000039 12r00r00         [24]  563 	lcall	_printf
      00003C 15 81            [12]  564 	dec	sp
      00003E 15 81            [12]  565 	dec	sp
      000040 15 81            [12]  566 	dec	sp
                                    567 ;	main.c:23: printf("\r\n Press 3 to start Watch Dog Timer\r\n");
      000042 74r6E            [12]  568 	mov	a,#___str_3
      000044 C0 E0            [24]  569 	push	acc
      000046 74s00            [12]  570 	mov	a,#(___str_3 >> 8)
      000048 C0 E0            [24]  571 	push	acc
      00004A 74 80            [12]  572 	mov	a,#0x80
      00004C C0 E0            [24]  573 	push	acc
      00004E 12r00r00         [24]  574 	lcall	_printf
      000051 15 81            [12]  575 	dec	sp
      000053 15 81            [12]  576 	dec	sp
      000055 15 81            [12]  577 	dec	sp
                                    578 ;	main.c:24: printf("\r\n Press 4 to set the minimum frequency\r\n"); //1.8
      000057 74r94            [12]  579 	mov	a,#___str_4
      000059 C0 E0            [24]  580 	push	acc
      00005B 74s00            [12]  581 	mov	a,#(___str_4 >> 8)
      00005D C0 E0            [24]  582 	push	acc
      00005F 74 80            [12]  583 	mov	a,#0x80
      000061 C0 E0            [24]  584 	push	acc
      000063 12r00r00         [24]  585 	lcall	_printf
      000066 15 81            [12]  586 	dec	sp
      000068 15 81            [12]  587 	dec	sp
      00006A 15 81            [12]  588 	dec	sp
                                    589 ;	main.c:25: printf("\r\n Press 5 to set the maximum frequency\r\n");
      00006C 74rBE            [12]  590 	mov	a,#___str_5
      00006E C0 E0            [24]  591 	push	acc
      000070 74s00            [12]  592 	mov	a,#(___str_5 >> 8)
      000072 C0 E0            [24]  593 	push	acc
      000074 74 80            [12]  594 	mov	a,#0x80
      000076 C0 E0            [24]  595 	push	acc
      000078 12r00r00         [24]  596 	lcall	_printf
      00007B 15 81            [12]  597 	dec	sp
      00007D 15 81            [12]  598 	dec	sp
      00007F 15 81            [12]  599 	dec	sp
                                    600 ;	main.c:26: printf("\r\n Press 6 to go to Idle Mode\r\n"); //
      000081 74rE8            [12]  601 	mov	a,#___str_6
      000083 C0 E0            [24]  602 	push	acc
      000085 74s00            [12]  603 	mov	a,#(___str_6 >> 8)
      000087 C0 E0            [24]  604 	push	acc
      000089 74 80            [12]  605 	mov	a,#0x80
      00008B C0 E0            [24]  606 	push	acc
      00008D 12r00r00         [24]  607 	lcall	_printf
      000090 15 81            [12]  608 	dec	sp
      000092 15 81            [12]  609 	dec	sp
      000094 15 81            [12]  610 	dec	sp
                                    611 ;	main.c:27: printf("\r\n Press 7 to set to Power Down Mode\r\n");
      000096 74r08            [12]  612 	mov	a,#___str_7
      000098 C0 E0            [24]  613 	push	acc
      00009A 74s01            [12]  614 	mov	a,#(___str_7 >> 8)
      00009C C0 E0            [24]  615 	push	acc
      00009E 74 80            [12]  616 	mov	a,#0x80
      0000A0 C0 E0            [24]  617 	push	acc
      0000A2 12r00r00         [24]  618 	lcall	_printf
      0000A5 15 81            [12]  619 	dec	sp
      0000A7 15 81            [12]  620 	dec	sp
      0000A9 15 81            [12]  621 	dec	sp
                                    622 ;	main.c:28: printf("\r\n Press 8 to set to High Speed Mode\r\n");
      0000AB 74r2F            [12]  623 	mov	a,#___str_8
      0000AD C0 E0            [24]  624 	push	acc
      0000AF 74s01            [12]  625 	mov	a,#(___str_8 >> 8)
      0000B1 C0 E0            [24]  626 	push	acc
      0000B3 74 80            [12]  627 	mov	a,#0x80
      0000B5 C0 E0            [24]  628 	push	acc
      0000B7 12r00r00         [24]  629 	lcall	_printf
      0000BA 15 81            [12]  630 	dec	sp
      0000BC 15 81            [12]  631 	dec	sp
      0000BE 15 81            [12]  632 	dec	sp
                                    633 ;	main.c:29: printf("\r\n ***************************************\r\n");
      0000C0 74r00            [12]  634 	mov	a,#___str_0
      0000C2 C0 E0            [24]  635 	push	acc
      0000C4 74s00            [12]  636 	mov	a,#(___str_0 >> 8)
      0000C6 C0 E0            [24]  637 	push	acc
      0000C8 74 80            [12]  638 	mov	a,#0x80
      0000CA C0 E0            [24]  639 	push	acc
      0000CC 12r00r00         [24]  640 	lcall	_printf
      0000CF 15 81            [12]  641 	dec	sp
      0000D1 15 81            [12]  642 	dec	sp
      0000D3 15 81            [12]  643 	dec	sp
                                    644 ;	main.c:32: while(1)
      0000D5                        645 00111$:
                                    646 ;	main.c:35: CKCON0 = 0X1F;
      0000D5 75 8F 1F         [24]  647 	mov	_CKCON0,#0x1f
                                    648 ;	main.c:36: mode = getchar();
      0000D8 12r00r00         [24]  649 	lcall	_getchar
      0000DB AE 82            [24]  650 	mov	r6,dpl
      0000DD AF 83            [24]  651 	mov	r7,dph
      0000DF 90r00r00         [24]  652 	mov	dptr,#_mode
      0000E2 EE               [12]  653 	mov	a,r6
      0000E3 F0               [24]  654 	movx	@dptr,a
      0000E4 EF               [12]  655 	mov	a,r7
      0000E5 A3               [24]  656 	inc	dptr
      0000E6 F0               [24]  657 	movx	@dptr,a
                                    658 ;	main.c:37: putchar(mode);
      0000E7 8E 82            [24]  659 	mov	dpl,r6
      0000E9 8F 83            [24]  660 	mov	dph,r7
      0000EB 12r00r00         [24]  661 	lcall	_putchar
                                    662 ;	main.c:39: switch(mode)
      0000EE 90r00r00         [24]  663 	mov	dptr,#_mode
      0000F1 E0               [24]  664 	movx	a,@dptr
      0000F2 FE               [12]  665 	mov	r6,a
      0000F3 A3               [24]  666 	inc	dptr
      0000F4 E0               [24]  667 	movx	a,@dptr
      0000F5 FF               [12]  668 	mov	r7,a
      0000F6 C3               [12]  669 	clr	c
      0000F7 EE               [12]  670 	mov	a,r6
      0000F8 94 31            [12]  671 	subb	a,#0x31
      0000FA EF               [12]  672 	mov	a,r7
      0000FB 64 80            [12]  673 	xrl	a,#0x80
      0000FD 94 80            [12]  674 	subb	a,#0x80
      0000FF 50 03            [24]  675 	jnc	00127$
      000101 02r02r08         [24]  676 	ljmp	00109$
      000104                        677 00127$:
      000104 C3               [12]  678 	clr	c
      000105 74 38            [12]  679 	mov	a,#0x38
      000107 9E               [12]  680 	subb	a,r6
      000108 74 80            [12]  681 	mov	a,#(0x00 ^ 0x80)
      00010A 8F F0            [24]  682 	mov	b,r7
      00010C 63 F0 80         [24]  683 	xrl	b,#0x80
      00010F 95 F0            [12]  684 	subb	a,b
      000111 50 03            [24]  685 	jnc	00128$
      000113 02r02r08         [24]  686 	ljmp	00109$
      000116                        687 00128$:
      000116 EE               [12]  688 	mov	a,r6
      000117 24 CF            [12]  689 	add	a,#0xcf
      000119 FE               [12]  690 	mov	r6,a
      00011A 24 0A            [12]  691 	add	a,#(00129$-3-.)
      00011C 83               [24]  692 	movc	a,@a+pc
      00011D F5 82            [12]  693 	mov	dpl,a
      00011F EE               [12]  694 	mov	a,r6
      000120 24 0C            [12]  695 	add	a,#(00130$-3-.)
      000122 83               [24]  696 	movc	a,@a+pc
      000123 F5 83            [12]  697 	mov	dph,a
      000125 E4               [12]  698 	clr	a
      000126 73               [24]  699 	jmp	@a+dptr
      000127                        700 00129$:
      000127r37                     701 	.db	00101$
      000128r52                     702 	.db	00102$
      000129r6D                     703 	.db	00103$
      00012Ar88                     704 	.db	00104$
      00012BrA2                     705 	.db	00105$
      00012CrBC                     706 	.db	00106$
      00012DrD6                     707 	.db	00107$
      00012ErF0                     708 	.db	00108$
      00012F                        709 00130$:
      00012Fs01                     710 	.db	00101$>>8
      000130s01                     711 	.db	00102$>>8
      000131s01                     712 	.db	00103$>>8
      000132s01                     713 	.db	00104$>>8
      000133s01                     714 	.db	00105$>>8
      000134s01                     715 	.db	00106$>>8
      000135s01                     716 	.db	00107$>>8
      000136s01                     717 	.db	00108$>>8
                                    718 ;	main.c:41: case '1':
      000137                        719 00101$:
                                    720 ;	main.c:42: printf("PWM Mode activated\r\n");
      000137 74r56            [12]  721 	mov	a,#___str_9
      000139 C0 E0            [24]  722 	push	acc
      00013B 74s01            [12]  723 	mov	a,#(___str_9 >> 8)
      00013D C0 E0            [24]  724 	push	acc
      00013F 74 80            [12]  725 	mov	a,#0x80
      000141 C0 E0            [24]  726 	push	acc
      000143 12r00r00         [24]  727 	lcall	_printf
      000146 15 81            [12]  728 	dec	sp
      000148 15 81            [12]  729 	dec	sp
      00014A 15 81            [12]  730 	dec	sp
                                    731 ;	main.c:43: PWM_Start_Init();
      00014C 12r00r00         [24]  732 	lcall	_PWM_Start_Init
                                    733 ;	main.c:44: break;
      00014F 02r02r08         [24]  734 	ljmp	00109$
                                    735 ;	main.c:45: case '2':
      000152                        736 00102$:
                                    737 ;	main.c:46: printf("PWM Mode ended\r\n");
      000152 74r6B            [12]  738 	mov	a,#___str_10
      000154 C0 E0            [24]  739 	push	acc
      000156 74s01            [12]  740 	mov	a,#(___str_10 >> 8)
      000158 C0 E0            [24]  741 	push	acc
      00015A 74 80            [12]  742 	mov	a,#0x80
      00015C C0 E0            [24]  743 	push	acc
      00015E 12r00r00         [24]  744 	lcall	_printf
      000161 15 81            [12]  745 	dec	sp
      000163 15 81            [12]  746 	dec	sp
      000165 15 81            [12]  747 	dec	sp
                                    748 ;	main.c:47: PWM_Stop_Init();
      000167 12r00r00         [24]  749 	lcall	_PWM_Stop_Init
                                    750 ;	main.c:48: break;
      00016A 02r02r08         [24]  751 	ljmp	00109$
                                    752 ;	main.c:49: case '3':
      00016D                        753 00103$:
                                    754 ;	main.c:50: printf("Watchdog Timer activated\r\n");
      00016D 74r7C            [12]  755 	mov	a,#___str_11
      00016F C0 E0            [24]  756 	push	acc
      000171 74s01            [12]  757 	mov	a,#(___str_11 >> 8)
      000173 C0 E0            [24]  758 	push	acc
      000175 74 80            [12]  759 	mov	a,#0x80
      000177 C0 E0            [24]  760 	push	acc
      000179 12r00r00         [24]  761 	lcall	_printf
      00017C 15 81            [12]  762 	dec	sp
      00017E 15 81            [12]  763 	dec	sp
      000180 15 81            [12]  764 	dec	sp
                                    765 ;	main.c:51: Watchdog_Init();
      000182 12r00r00         [24]  766 	lcall	_Watchdog_Init
                                    767 ;	main.c:52: break;
      000185 02r02r08         [24]  768 	ljmp	00109$
                                    769 ;	main.c:53: case '4':
      000188                        770 00104$:
                                    771 ;	main.c:54: printf("Minimum Frequency set\r\n");
      000188 74r97            [12]  772 	mov	a,#___str_12
      00018A C0 E0            [24]  773 	push	acc
      00018C 74s01            [12]  774 	mov	a,#(___str_12 >> 8)
      00018E C0 E0            [24]  775 	push	acc
      000190 74 80            [12]  776 	mov	a,#0x80
      000192 C0 E0            [24]  777 	push	acc
      000194 12r00r00         [24]  778 	lcall	_printf
      000197 15 81            [12]  779 	dec	sp
      000199 15 81            [12]  780 	dec	sp
      00019B 15 81            [12]  781 	dec	sp
                                    782 ;	main.c:55: CKRL = 0x00;
      00019D 75 97 00         [24]  783 	mov	_CKRL,#0x00
                                    784 ;	main.c:56: break;
                                    785 ;	main.c:57: case '5':
      0001A0 80 66            [24]  786 	sjmp	00109$
      0001A2                        787 00105$:
                                    788 ;	main.c:58: printf("Maximum Frequency set\r\n");
      0001A2 74rAF            [12]  789 	mov	a,#___str_13
      0001A4 C0 E0            [24]  790 	push	acc
      0001A6 74s01            [12]  791 	mov	a,#(___str_13 >> 8)
      0001A8 C0 E0            [24]  792 	push	acc
      0001AA 74 80            [12]  793 	mov	a,#0x80
      0001AC C0 E0            [24]  794 	push	acc
      0001AE 12r00r00         [24]  795 	lcall	_printf
      0001B1 15 81            [12]  796 	dec	sp
      0001B3 15 81            [12]  797 	dec	sp
      0001B5 15 81            [12]  798 	dec	sp
                                    799 ;	main.c:59: CKRL = 0xFF;
      0001B7 75 97 FF         [24]  800 	mov	_CKRL,#0xff
                                    801 ;	main.c:60: break;
                                    802 ;	main.c:61: case '6':
      0001BA 80 4C            [24]  803 	sjmp	00109$
      0001BC                        804 00106$:
                                    805 ;	main.c:62: printf("Idle Mode activated\r\n");
      0001BC 74rC7            [12]  806 	mov	a,#___str_14
      0001BE C0 E0            [24]  807 	push	acc
      0001C0 74s01            [12]  808 	mov	a,#(___str_14 >> 8)
      0001C2 C0 E0            [24]  809 	push	acc
      0001C4 74 80            [12]  810 	mov	a,#0x80
      0001C6 C0 E0            [24]  811 	push	acc
      0001C8 12r00r00         [24]  812 	lcall	_printf
      0001CB 15 81            [12]  813 	dec	sp
      0001CD 15 81            [12]  814 	dec	sp
      0001CF 15 81            [12]  815 	dec	sp
                                    816 ;	main.c:63: PCON = 0x01;
      0001D1 75 87 01         [24]  817 	mov	_PCON,#0x01
                                    818 ;	main.c:64: break;
                                    819 ;	main.c:65: case '7':
      0001D4 80 32            [24]  820 	sjmp	00109$
      0001D6                        821 00107$:
                                    822 ;	main.c:66: printf("Power Down Mode activated\r\n");
      0001D6 74rDD            [12]  823 	mov	a,#___str_15
      0001D8 C0 E0            [24]  824 	push	acc
      0001DA 74s01            [12]  825 	mov	a,#(___str_15 >> 8)
      0001DC C0 E0            [24]  826 	push	acc
      0001DE 74 80            [12]  827 	mov	a,#0x80
      0001E0 C0 E0            [24]  828 	push	acc
      0001E2 12r00r00         [24]  829 	lcall	_printf
      0001E5 15 81            [12]  830 	dec	sp
      0001E7 15 81            [12]  831 	dec	sp
      0001E9 15 81            [12]  832 	dec	sp
                                    833 ;	main.c:67: PCON = 0x02;
      0001EB 75 87 02         [24]  834 	mov	_PCON,#0x02
                                    835 ;	main.c:68: break;
                                    836 ;	main.c:69: case '8':
      0001EE 80 18            [24]  837 	sjmp	00109$
      0001F0                        838 00108$:
                                    839 ;	main.c:70: printf("High Speed Mode activated\r\n");
      0001F0 74rF9            [12]  840 	mov	a,#___str_16
      0001F2 C0 E0            [24]  841 	push	acc
      0001F4 74s01            [12]  842 	mov	a,#(___str_16 >> 8)
      0001F6 C0 E0            [24]  843 	push	acc
      0001F8 74 80            [12]  844 	mov	a,#0x80
      0001FA C0 E0            [24]  845 	push	acc
      0001FC 12r00r00         [24]  846 	lcall	_printf
      0001FF 15 81            [12]  847 	dec	sp
      000201 15 81            [12]  848 	dec	sp
      000203 15 81            [12]  849 	dec	sp
                                    850 ;	main.c:71: Highspeed_Toggle_Init();
      000205 12r00r00         [24]  851 	lcall	_Highspeed_Toggle_Init
                                    852 ;	main.c:74: }
      000208                        853 00109$:
                                    854 ;	main.c:75: mode ='0';//clearing modes
      000208 90r00r00         [24]  855 	mov	dptr,#_mode
      00020B 74 30            [12]  856 	mov	a,#0x30
      00020D F0               [24]  857 	movx	@dptr,a
      00020E E4               [12]  858 	clr	a
      00020F A3               [24]  859 	inc	dptr
      000210 F0               [24]  860 	movx	@dptr,a
                                    861 ;	main.c:77: }
      000211 02r00rD5         [24]  862 	ljmp	00111$
                                    863 	.area CSEG    (CODE)
                                    864 	.area CONST   (CODE)
                                    865 	.area CONST   (CODE)
      000000                        866 ___str_0:
      000000 0D                     867 	.db 0x0d
      000001 0A                     868 	.db 0x0a
      000002 20 2A 2A 2A 2A 2A 2A   869 	.ascii " ***************************************"
             2A 2A 2A 2A 2A 2A 2A
             2A 2A 2A 2A 2A 2A 2A
             2A 2A 2A 2A 2A 2A 2A
             2A 2A 2A 2A 2A 2A 2A
             2A 2A 2A 2A 2A
      00002A 0D                     870 	.db 0x0d
      00002B 0A                     871 	.db 0x0a
      00002C 00                     872 	.db 0x00
                                    873 	.area CSEG    (CODE)
                                    874 	.area CONST   (CODE)
      00002D                        875 ___str_1:
      00002D 0D                     876 	.db 0x0d
      00002E 0A                     877 	.db 0x0a
      00002F 20 50 72 65 73 73 20   878 	.ascii " Press 1 to start PWM signal"
             31 20 74 6F 20 73 74
             61 72 74 20 50 57 4D
             20 73 69 67 6E 61 6C
      00004B 0D                     879 	.db 0x0d
      00004C 0A                     880 	.db 0x0a
      00004D 00                     881 	.db 0x00
                                    882 	.area CSEG    (CODE)
                                    883 	.area CONST   (CODE)
      00004E                        884 ___str_2:
      00004E 0D                     885 	.db 0x0d
      00004F 0A                     886 	.db 0x0a
      000050 20 50 72 65 73 73 20   887 	.ascii " Press 2 to stop PWM signal"
             32 20 74 6F 20 73 74
             6F 70 20 50 57 4D 20
             73 69 67 6E 61 6C
      00006B 0D                     888 	.db 0x0d
      00006C 0A                     889 	.db 0x0a
      00006D 00                     890 	.db 0x00
                                    891 	.area CSEG    (CODE)
                                    892 	.area CONST   (CODE)
      00006E                        893 ___str_3:
      00006E 0D                     894 	.db 0x0d
      00006F 0A                     895 	.db 0x0a
      000070 20 50 72 65 73 73 20   896 	.ascii " Press 3 to start Watch Dog Timer"
             33 20 74 6F 20 73 74
             61 72 74 20 57 61 74
             63 68 20 44 6F 67 20
             54 69 6D 65 72
      000091 0D                     897 	.db 0x0d
      000092 0A                     898 	.db 0x0a
      000093 00                     899 	.db 0x00
                                    900 	.area CSEG    (CODE)
                                    901 	.area CONST   (CODE)
      000094                        902 ___str_4:
      000094 0D                     903 	.db 0x0d
      000095 0A                     904 	.db 0x0a
      000096 20 50 72 65 73 73 20   905 	.ascii " Press 4 to set the minimum frequency"
             34 20 74 6F 20 73 65
             74 20 74 68 65 20 6D
             69 6E 69 6D 75 6D 20
             66 72 65 71 75 65 6E
             63 79
      0000BB 0D                     906 	.db 0x0d
      0000BC 0A                     907 	.db 0x0a
      0000BD 00                     908 	.db 0x00
                                    909 	.area CSEG    (CODE)
                                    910 	.area CONST   (CODE)
      0000BE                        911 ___str_5:
      0000BE 0D                     912 	.db 0x0d
      0000BF 0A                     913 	.db 0x0a
      0000C0 20 50 72 65 73 73 20   914 	.ascii " Press 5 to set the maximum frequency"
             35 20 74 6F 20 73 65
             74 20 74 68 65 20 6D
             61 78 69 6D 75 6D 20
             66 72 65 71 75 65 6E
             63 79
      0000E5 0D                     915 	.db 0x0d
      0000E6 0A                     916 	.db 0x0a
      0000E7 00                     917 	.db 0x00
                                    918 	.area CSEG    (CODE)
                                    919 	.area CONST   (CODE)
      0000E8                        920 ___str_6:
      0000E8 0D                     921 	.db 0x0d
      0000E9 0A                     922 	.db 0x0a
      0000EA 20 50 72 65 73 73 20   923 	.ascii " Press 6 to go to Idle Mode"
             36 20 74 6F 20 67 6F
             20 74 6F 20 49 64 6C
             65 20 4D 6F 64 65
      000105 0D                     924 	.db 0x0d
      000106 0A                     925 	.db 0x0a
      000107 00                     926 	.db 0x00
                                    927 	.area CSEG    (CODE)
                                    928 	.area CONST   (CODE)
      000108                        929 ___str_7:
      000108 0D                     930 	.db 0x0d
      000109 0A                     931 	.db 0x0a
      00010A 20 50 72 65 73 73 20   932 	.ascii " Press 7 to set to Power Down Mode"
             37 20 74 6F 20 73 65
             74 20 74 6F 20 50 6F
             77 65 72 20 44 6F 77
             6E 20 4D 6F 64 65
      00012C 0D                     933 	.db 0x0d
      00012D 0A                     934 	.db 0x0a
      00012E 00                     935 	.db 0x00
                                    936 	.area CSEG    (CODE)
                                    937 	.area CONST   (CODE)
      00012F                        938 ___str_8:
      00012F 0D                     939 	.db 0x0d
      000130 0A                     940 	.db 0x0a
      000131 20 50 72 65 73 73 20   941 	.ascii " Press 8 to set to High Speed Mode"
             38 20 74 6F 20 73 65
             74 20 74 6F 20 48 69
             67 68 20 53 70 65 65
             64 20 4D 6F 64 65
      000153 0D                     942 	.db 0x0d
      000154 0A                     943 	.db 0x0a
      000155 00                     944 	.db 0x00
                                    945 	.area CSEG    (CODE)
                                    946 	.area CONST   (CODE)
      000156                        947 ___str_9:
      000156 50 57 4D 20 4D 6F 64   948 	.ascii "PWM Mode activated"
             65 20 61 63 74 69 76
             61 74 65 64
      000168 0D                     949 	.db 0x0d
      000169 0A                     950 	.db 0x0a
      00016A 00                     951 	.db 0x00
                                    952 	.area CSEG    (CODE)
                                    953 	.area CONST   (CODE)
      00016B                        954 ___str_10:
      00016B 50 57 4D 20 4D 6F 64   955 	.ascii "PWM Mode ended"
             65 20 65 6E 64 65 64
      000179 0D                     956 	.db 0x0d
      00017A 0A                     957 	.db 0x0a
      00017B 00                     958 	.db 0x00
                                    959 	.area CSEG    (CODE)
                                    960 	.area CONST   (CODE)
      00017C                        961 ___str_11:
      00017C 57 61 74 63 68 64 6F   962 	.ascii "Watchdog Timer activated"
             67 20 54 69 6D 65 72
             20 61 63 74 69 76 61
             74 65 64
      000194 0D                     963 	.db 0x0d
      000195 0A                     964 	.db 0x0a
      000196 00                     965 	.db 0x00
                                    966 	.area CSEG    (CODE)
                                    967 	.area CONST   (CODE)
      000197                        968 ___str_12:
      000197 4D 69 6E 69 6D 75 6D   969 	.ascii "Minimum Frequency set"
             20 46 72 65 71 75 65
             6E 63 79 20 73 65 74
      0001AC 0D                     970 	.db 0x0d
      0001AD 0A                     971 	.db 0x0a
      0001AE 00                     972 	.db 0x00
                                    973 	.area CSEG    (CODE)
                                    974 	.area CONST   (CODE)
      0001AF                        975 ___str_13:
      0001AF 4D 61 78 69 6D 75 6D   976 	.ascii "Maximum Frequency set"
             20 46 72 65 71 75 65
             6E 63 79 20 73 65 74
      0001C4 0D                     977 	.db 0x0d
      0001C5 0A                     978 	.db 0x0a
      0001C6 00                     979 	.db 0x00
                                    980 	.area CSEG    (CODE)
                                    981 	.area CONST   (CODE)
      0001C7                        982 ___str_14:
      0001C7 49 64 6C 65 20 4D 6F   983 	.ascii "Idle Mode activated"
             64 65 20 61 63 74 69
             76 61 74 65 64
      0001DA 0D                     984 	.db 0x0d
      0001DB 0A                     985 	.db 0x0a
      0001DC 00                     986 	.db 0x00
                                    987 	.area CSEG    (CODE)
                                    988 	.area CONST   (CODE)
      0001DD                        989 ___str_15:
      0001DD 50 6F 77 65 72 20 44   990 	.ascii "Power Down Mode activated"
             6F 77 6E 20 4D 6F 64
             65 20 61 63 74 69 76
             61 74 65 64
      0001F6 0D                     991 	.db 0x0d
      0001F7 0A                     992 	.db 0x0a
      0001F8 00                     993 	.db 0x00
                                    994 	.area CSEG    (CODE)
                                    995 	.area CONST   (CODE)
      0001F9                        996 ___str_16:
      0001F9 48 69 67 68 20 53 70   997 	.ascii "High Speed Mode activated"
             65 65 64 20 4D 6F 64
             65 20 61 63 74 69 76
             61 74 65 64
      000212 0D                     998 	.db 0x0d
      000213 0A                     999 	.db 0x0a
      000214 00                    1000 	.db 0x00
                                   1001 	.area CSEG    (CODE)
                                   1002 	.area XINIT   (CODE)
                                   1003 	.area CABS    (ABS,CODE)
