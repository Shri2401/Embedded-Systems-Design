                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module func
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _CY
                                     12 	.globl _AC
                                     13 	.globl _F0
                                     14 	.globl _RS1
                                     15 	.globl _RS0
                                     16 	.globl _OV
                                     17 	.globl _F1
                                     18 	.globl _P
                                     19 	.globl _PS
                                     20 	.globl _PT1
                                     21 	.globl _PX1
                                     22 	.globl _PT0
                                     23 	.globl _PX0
                                     24 	.globl _RD
                                     25 	.globl _WR
                                     26 	.globl _T1
                                     27 	.globl _T0
                                     28 	.globl _INT1
                                     29 	.globl _INT0
                                     30 	.globl _TXD
                                     31 	.globl _RXD
                                     32 	.globl _P3_7
                                     33 	.globl _P3_6
                                     34 	.globl _P3_5
                                     35 	.globl _P3_4
                                     36 	.globl _P3_3
                                     37 	.globl _P3_2
                                     38 	.globl _P3_1
                                     39 	.globl _P3_0
                                     40 	.globl _EA
                                     41 	.globl _ES
                                     42 	.globl _ET1
                                     43 	.globl _EX1
                                     44 	.globl _ET0
                                     45 	.globl _EX0
                                     46 	.globl _P2_7
                                     47 	.globl _P2_6
                                     48 	.globl _P2_5
                                     49 	.globl _P2_4
                                     50 	.globl _P2_3
                                     51 	.globl _P2_2
                                     52 	.globl _P2_1
                                     53 	.globl _P2_0
                                     54 	.globl _SM0
                                     55 	.globl _SM1
                                     56 	.globl _SM2
                                     57 	.globl _REN
                                     58 	.globl _TB8
                                     59 	.globl _RB8
                                     60 	.globl _TI
                                     61 	.globl _RI
                                     62 	.globl _P1_7
                                     63 	.globl _P1_6
                                     64 	.globl _P1_5
                                     65 	.globl _P1_4
                                     66 	.globl _P1_3
                                     67 	.globl _P1_2
                                     68 	.globl _P1_1
                                     69 	.globl _P1_0
                                     70 	.globl _TF1
                                     71 	.globl _TR1
                                     72 	.globl _TF0
                                     73 	.globl _TR0
                                     74 	.globl _IE1
                                     75 	.globl _IT1
                                     76 	.globl _IE0
                                     77 	.globl _IT0
                                     78 	.globl _P0_7
                                     79 	.globl _P0_6
                                     80 	.globl _P0_5
                                     81 	.globl _P0_4
                                     82 	.globl _P0_3
                                     83 	.globl _P0_2
                                     84 	.globl _P0_1
                                     85 	.globl _P0_0
                                     86 	.globl _P5_7
                                     87 	.globl _P5_6
                                     88 	.globl _P5_5
                                     89 	.globl _P5_4
                                     90 	.globl _P5_3
                                     91 	.globl _P5_2
                                     92 	.globl _P5_1
                                     93 	.globl _P5_0
                                     94 	.globl _P4_7
                                     95 	.globl _P4_6
                                     96 	.globl _P4_5
                                     97 	.globl _P4_4
                                     98 	.globl _P4_3
                                     99 	.globl _P4_2
                                    100 	.globl _P4_1
                                    101 	.globl _P4_0
                                    102 	.globl _PX0L
                                    103 	.globl _PT0L
                                    104 	.globl _PX1L
                                    105 	.globl _PT1L
                                    106 	.globl _PSL
                                    107 	.globl _PT2L
                                    108 	.globl _PPCL
                                    109 	.globl _EC
                                    110 	.globl _CCF0
                                    111 	.globl _CCF1
                                    112 	.globl _CCF2
                                    113 	.globl _CCF3
                                    114 	.globl _CCF4
                                    115 	.globl _CR
                                    116 	.globl _CF
                                    117 	.globl _TF2
                                    118 	.globl _EXF2
                                    119 	.globl _RCLK
                                    120 	.globl _TCLK
                                    121 	.globl _EXEN2
                                    122 	.globl _TR2
                                    123 	.globl _C_T2
                                    124 	.globl _CP_RL2
                                    125 	.globl _T2CON_7
                                    126 	.globl _T2CON_6
                                    127 	.globl _T2CON_5
                                    128 	.globl _T2CON_4
                                    129 	.globl _T2CON_3
                                    130 	.globl _T2CON_2
                                    131 	.globl _T2CON_1
                                    132 	.globl _T2CON_0
                                    133 	.globl _PT2
                                    134 	.globl _ET2
                                    135 	.globl _B
                                    136 	.globl _ACC
                                    137 	.globl _PSW
                                    138 	.globl _IP
                                    139 	.globl _P3
                                    140 	.globl _IE
                                    141 	.globl _P2
                                    142 	.globl _SBUF
                                    143 	.globl _SCON
                                    144 	.globl _P1
                                    145 	.globl _TH1
                                    146 	.globl _TH0
                                    147 	.globl _TL1
                                    148 	.globl _TL0
                                    149 	.globl _TMOD
                                    150 	.globl _TCON
                                    151 	.globl _PCON
                                    152 	.globl _DPH
                                    153 	.globl _DPL
                                    154 	.globl _SP
                                    155 	.globl _P0
                                    156 	.globl _EECON
                                    157 	.globl _KBF
                                    158 	.globl _KBE
                                    159 	.globl _KBLS
                                    160 	.globl _BRL
                                    161 	.globl _BDRCON
                                    162 	.globl _T2MOD
                                    163 	.globl _SPDAT
                                    164 	.globl _SPSTA
                                    165 	.globl _SPCON
                                    166 	.globl _SADEN
                                    167 	.globl _SADDR
                                    168 	.globl _WDTPRG
                                    169 	.globl _WDTRST
                                    170 	.globl _P5
                                    171 	.globl _P4
                                    172 	.globl _IPH1
                                    173 	.globl _IPL1
                                    174 	.globl _IPH0
                                    175 	.globl _IPL0
                                    176 	.globl _IEN1
                                    177 	.globl _IEN0
                                    178 	.globl _CMOD
                                    179 	.globl _CL
                                    180 	.globl _CH
                                    181 	.globl _CCON
                                    182 	.globl _CCAPM4
                                    183 	.globl _CCAPM3
                                    184 	.globl _CCAPM2
                                    185 	.globl _CCAPM1
                                    186 	.globl _CCAPM0
                                    187 	.globl _CCAP4L
                                    188 	.globl _CCAP3L
                                    189 	.globl _CCAP2L
                                    190 	.globl _CCAP1L
                                    191 	.globl _CCAP0L
                                    192 	.globl _CCAP4H
                                    193 	.globl _CCAP3H
                                    194 	.globl _CCAP2H
                                    195 	.globl _CCAP1H
                                    196 	.globl _CCAP0H
                                    197 	.globl _CKCON1
                                    198 	.globl _CKCON0
                                    199 	.globl _CKRL
                                    200 	.globl _AUXR1
                                    201 	.globl _AUXR
                                    202 	.globl _TH2
                                    203 	.globl _TL2
                                    204 	.globl _RCAP2H
                                    205 	.globl _RCAP2L
                                    206 	.globl _T2CON
                                    207 	.globl _Serial_Init
                                    208 	.globl _PWM_Start_Init
                                    209 	.globl _PWM_Stop_Init
                                    210 	.globl _Highspeed_Toggle_Init
                                    211 	.globl _Watchdog_Init
                                    212 	.globl _getchar
                                    213 	.globl _putchar
                                    214 ;--------------------------------------------------------
                                    215 ; special function registers
                                    216 ;--------------------------------------------------------
                                    217 	.area RSEG    (ABS,DATA)
      000000                        218 	.org 0x0000
                           0000C8   219 _T2CON	=	0x00c8
                           0000CA   220 _RCAP2L	=	0x00ca
                           0000CB   221 _RCAP2H	=	0x00cb
                           0000CC   222 _TL2	=	0x00cc
                           0000CD   223 _TH2	=	0x00cd
                           00008E   224 _AUXR	=	0x008e
                           0000A2   225 _AUXR1	=	0x00a2
                           000097   226 _CKRL	=	0x0097
                           00008F   227 _CKCON0	=	0x008f
                           0000AF   228 _CKCON1	=	0x00af
                           0000FA   229 _CCAP0H	=	0x00fa
                           0000FB   230 _CCAP1H	=	0x00fb
                           0000FC   231 _CCAP2H	=	0x00fc
                           0000FD   232 _CCAP3H	=	0x00fd
                           0000FE   233 _CCAP4H	=	0x00fe
                           0000EA   234 _CCAP0L	=	0x00ea
                           0000EB   235 _CCAP1L	=	0x00eb
                           0000EC   236 _CCAP2L	=	0x00ec
                           0000ED   237 _CCAP3L	=	0x00ed
                           0000EE   238 _CCAP4L	=	0x00ee
                           0000DA   239 _CCAPM0	=	0x00da
                           0000DB   240 _CCAPM1	=	0x00db
                           0000DC   241 _CCAPM2	=	0x00dc
                           0000DD   242 _CCAPM3	=	0x00dd
                           0000DE   243 _CCAPM4	=	0x00de
                           0000D8   244 _CCON	=	0x00d8
                           0000F9   245 _CH	=	0x00f9
                           0000E9   246 _CL	=	0x00e9
                           0000D9   247 _CMOD	=	0x00d9
                           0000A8   248 _IEN0	=	0x00a8
                           0000B1   249 _IEN1	=	0x00b1
                           0000B8   250 _IPL0	=	0x00b8
                           0000B7   251 _IPH0	=	0x00b7
                           0000B2   252 _IPL1	=	0x00b2
                           0000B3   253 _IPH1	=	0x00b3
                           0000C0   254 _P4	=	0x00c0
                           0000E8   255 _P5	=	0x00e8
                           0000A6   256 _WDTRST	=	0x00a6
                           0000A7   257 _WDTPRG	=	0x00a7
                           0000A9   258 _SADDR	=	0x00a9
                           0000B9   259 _SADEN	=	0x00b9
                           0000C3   260 _SPCON	=	0x00c3
                           0000C4   261 _SPSTA	=	0x00c4
                           0000C5   262 _SPDAT	=	0x00c5
                           0000C9   263 _T2MOD	=	0x00c9
                           00009B   264 _BDRCON	=	0x009b
                           00009A   265 _BRL	=	0x009a
                           00009C   266 _KBLS	=	0x009c
                           00009D   267 _KBE	=	0x009d
                           00009E   268 _KBF	=	0x009e
                           0000D2   269 _EECON	=	0x00d2
                           000080   270 _P0	=	0x0080
                           000081   271 _SP	=	0x0081
                           000082   272 _DPL	=	0x0082
                           000083   273 _DPH	=	0x0083
                           000087   274 _PCON	=	0x0087
                           000088   275 _TCON	=	0x0088
                           000089   276 _TMOD	=	0x0089
                           00008A   277 _TL0	=	0x008a
                           00008B   278 _TL1	=	0x008b
                           00008C   279 _TH0	=	0x008c
                           00008D   280 _TH1	=	0x008d
                           000090   281 _P1	=	0x0090
                           000098   282 _SCON	=	0x0098
                           000099   283 _SBUF	=	0x0099
                           0000A0   284 _P2	=	0x00a0
                           0000A8   285 _IE	=	0x00a8
                           0000B0   286 _P3	=	0x00b0
                           0000B8   287 _IP	=	0x00b8
                           0000D0   288 _PSW	=	0x00d0
                           0000E0   289 _ACC	=	0x00e0
                           0000F0   290 _B	=	0x00f0
                                    291 ;--------------------------------------------------------
                                    292 ; special function bits
                                    293 ;--------------------------------------------------------
                                    294 	.area RSEG    (ABS,DATA)
      000000                        295 	.org 0x0000
                           0000AD   296 _ET2	=	0x00ad
                           0000BD   297 _PT2	=	0x00bd
                           0000C8   298 _T2CON_0	=	0x00c8
                           0000C9   299 _T2CON_1	=	0x00c9
                           0000CA   300 _T2CON_2	=	0x00ca
                           0000CB   301 _T2CON_3	=	0x00cb
                           0000CC   302 _T2CON_4	=	0x00cc
                           0000CD   303 _T2CON_5	=	0x00cd
                           0000CE   304 _T2CON_6	=	0x00ce
                           0000CF   305 _T2CON_7	=	0x00cf
                           0000C8   306 _CP_RL2	=	0x00c8
                           0000C9   307 _C_T2	=	0x00c9
                           0000CA   308 _TR2	=	0x00ca
                           0000CB   309 _EXEN2	=	0x00cb
                           0000CC   310 _TCLK	=	0x00cc
                           0000CD   311 _RCLK	=	0x00cd
                           0000CE   312 _EXF2	=	0x00ce
                           0000CF   313 _TF2	=	0x00cf
                           0000DF   314 _CF	=	0x00df
                           0000DE   315 _CR	=	0x00de
                           0000DC   316 _CCF4	=	0x00dc
                           0000DB   317 _CCF3	=	0x00db
                           0000DA   318 _CCF2	=	0x00da
                           0000D9   319 _CCF1	=	0x00d9
                           0000D8   320 _CCF0	=	0x00d8
                           0000AE   321 _EC	=	0x00ae
                           0000BE   322 _PPCL	=	0x00be
                           0000BD   323 _PT2L	=	0x00bd
                           0000BC   324 _PSL	=	0x00bc
                           0000BB   325 _PT1L	=	0x00bb
                           0000BA   326 _PX1L	=	0x00ba
                           0000B9   327 _PT0L	=	0x00b9
                           0000B8   328 _PX0L	=	0x00b8
                           0000C0   329 _P4_0	=	0x00c0
                           0000C1   330 _P4_1	=	0x00c1
                           0000C2   331 _P4_2	=	0x00c2
                           0000C3   332 _P4_3	=	0x00c3
                           0000C4   333 _P4_4	=	0x00c4
                           0000C5   334 _P4_5	=	0x00c5
                           0000C6   335 _P4_6	=	0x00c6
                           0000C7   336 _P4_7	=	0x00c7
                           0000E8   337 _P5_0	=	0x00e8
                           0000E9   338 _P5_1	=	0x00e9
                           0000EA   339 _P5_2	=	0x00ea
                           0000EB   340 _P5_3	=	0x00eb
                           0000EC   341 _P5_4	=	0x00ec
                           0000ED   342 _P5_5	=	0x00ed
                           0000EE   343 _P5_6	=	0x00ee
                           0000EF   344 _P5_7	=	0x00ef
                           000080   345 _P0_0	=	0x0080
                           000081   346 _P0_1	=	0x0081
                           000082   347 _P0_2	=	0x0082
                           000083   348 _P0_3	=	0x0083
                           000084   349 _P0_4	=	0x0084
                           000085   350 _P0_5	=	0x0085
                           000086   351 _P0_6	=	0x0086
                           000087   352 _P0_7	=	0x0087
                           000088   353 _IT0	=	0x0088
                           000089   354 _IE0	=	0x0089
                           00008A   355 _IT1	=	0x008a
                           00008B   356 _IE1	=	0x008b
                           00008C   357 _TR0	=	0x008c
                           00008D   358 _TF0	=	0x008d
                           00008E   359 _TR1	=	0x008e
                           00008F   360 _TF1	=	0x008f
                           000090   361 _P1_0	=	0x0090
                           000091   362 _P1_1	=	0x0091
                           000092   363 _P1_2	=	0x0092
                           000093   364 _P1_3	=	0x0093
                           000094   365 _P1_4	=	0x0094
                           000095   366 _P1_5	=	0x0095
                           000096   367 _P1_6	=	0x0096
                           000097   368 _P1_7	=	0x0097
                           000098   369 _RI	=	0x0098
                           000099   370 _TI	=	0x0099
                           00009A   371 _RB8	=	0x009a
                           00009B   372 _TB8	=	0x009b
                           00009C   373 _REN	=	0x009c
                           00009D   374 _SM2	=	0x009d
                           00009E   375 _SM1	=	0x009e
                           00009F   376 _SM0	=	0x009f
                           0000A0   377 _P2_0	=	0x00a0
                           0000A1   378 _P2_1	=	0x00a1
                           0000A2   379 _P2_2	=	0x00a2
                           0000A3   380 _P2_3	=	0x00a3
                           0000A4   381 _P2_4	=	0x00a4
                           0000A5   382 _P2_5	=	0x00a5
                           0000A6   383 _P2_6	=	0x00a6
                           0000A7   384 _P2_7	=	0x00a7
                           0000A8   385 _EX0	=	0x00a8
                           0000A9   386 _ET0	=	0x00a9
                           0000AA   387 _EX1	=	0x00aa
                           0000AB   388 _ET1	=	0x00ab
                           0000AC   389 _ES	=	0x00ac
                           0000AF   390 _EA	=	0x00af
                           0000B0   391 _P3_0	=	0x00b0
                           0000B1   392 _P3_1	=	0x00b1
                           0000B2   393 _P3_2	=	0x00b2
                           0000B3   394 _P3_3	=	0x00b3
                           0000B4   395 _P3_4	=	0x00b4
                           0000B5   396 _P3_5	=	0x00b5
                           0000B6   397 _P3_6	=	0x00b6
                           0000B7   398 _P3_7	=	0x00b7
                           0000B0   399 _RXD	=	0x00b0
                           0000B1   400 _TXD	=	0x00b1
                           0000B2   401 _INT0	=	0x00b2
                           0000B3   402 _INT1	=	0x00b3
                           0000B4   403 _T0	=	0x00b4
                           0000B5   404 _T1	=	0x00b5
                           0000B6   405 _WR	=	0x00b6
                           0000B7   406 _RD	=	0x00b7
                           0000B8   407 _PX0	=	0x00b8
                           0000B9   408 _PT0	=	0x00b9
                           0000BA   409 _PX1	=	0x00ba
                           0000BB   410 _PT1	=	0x00bb
                           0000BC   411 _PS	=	0x00bc
                           0000D0   412 _P	=	0x00d0
                           0000D1   413 _F1	=	0x00d1
                           0000D2   414 _OV	=	0x00d2
                           0000D3   415 _RS0	=	0x00d3
                           0000D4   416 _RS1	=	0x00d4
                           0000D5   417 _F0	=	0x00d5
                           0000D6   418 _AC	=	0x00d6
                           0000D7   419 _CY	=	0x00d7
                                    420 ;--------------------------------------------------------
                                    421 ; overlayable register banks
                                    422 ;--------------------------------------------------------
                                    423 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        424 	.ds 8
                                    425 ;--------------------------------------------------------
                                    426 ; internal ram data
                                    427 ;--------------------------------------------------------
                                    428 	.area DSEG    (DATA)
                                    429 ;--------------------------------------------------------
                                    430 ; overlayable items in internal ram
                                    431 ;--------------------------------------------------------
                                    432 ;--------------------------------------------------------
                                    433 ; indirectly addressable internal ram data
                                    434 ;--------------------------------------------------------
                                    435 	.area ISEG    (DATA)
                                    436 ;--------------------------------------------------------
                                    437 ; absolute internal ram data
                                    438 ;--------------------------------------------------------
                                    439 	.area IABS    (ABS,DATA)
                                    440 	.area IABS    (ABS,DATA)
                                    441 ;--------------------------------------------------------
                                    442 ; bit data
                                    443 ;--------------------------------------------------------
                                    444 	.area BSEG    (BIT)
                                    445 ;--------------------------------------------------------
                                    446 ; paged external ram data
                                    447 ;--------------------------------------------------------
                                    448 	.area PSEG    (PAG,XDATA)
                                    449 ;--------------------------------------------------------
                                    450 ; external ram data
                                    451 ;--------------------------------------------------------
                                    452 	.area XSEG    (XDATA)
      000000                        453 _putchar_c_65536_85:
      000000                        454 	.ds 2
                                    455 ;--------------------------------------------------------
                                    456 ; absolute external ram data
                                    457 ;--------------------------------------------------------
                                    458 	.area XABS    (ABS,XDATA)
                                    459 ;--------------------------------------------------------
                                    460 ; external initialized ram data
                                    461 ;--------------------------------------------------------
                                    462 	.area XISEG   (XDATA)
                                    463 	.area HOME    (CODE)
                                    464 	.area GSINIT0 (CODE)
                                    465 	.area GSINIT1 (CODE)
                                    466 	.area GSINIT2 (CODE)
                                    467 	.area GSINIT3 (CODE)
                                    468 	.area GSINIT4 (CODE)
                                    469 	.area GSINIT5 (CODE)
                                    470 	.area GSINIT  (CODE)
                                    471 	.area GSFINAL (CODE)
                                    472 	.area CSEG    (CODE)
                                    473 ;--------------------------------------------------------
                                    474 ; global & static initialisations
                                    475 ;--------------------------------------------------------
                                    476 	.area HOME    (CODE)
                                    477 	.area GSINIT  (CODE)
                                    478 	.area GSFINAL (CODE)
                                    479 	.area GSINIT  (CODE)
                                    480 ;--------------------------------------------------------
                                    481 ; Home
                                    482 ;--------------------------------------------------------
                                    483 	.area HOME    (CODE)
                                    484 	.area HOME    (CODE)
                                    485 ;--------------------------------------------------------
                                    486 ; code
                                    487 ;--------------------------------------------------------
                                    488 	.area CSEG    (CODE)
                                    489 ;------------------------------------------------------------
                                    490 ;Allocation info for local variables in function 'Serial_Init'
                                    491 ;------------------------------------------------------------
                                    492 ;	func.c:12: void Serial_Init(void)
                                    493 ;	-----------------------------------------
                                    494 ;	 function Serial_Init
                                    495 ;	-----------------------------------------
      000000                        496 _Serial_Init:
                           000007   497 	ar7 = 0x07
                           000006   498 	ar6 = 0x06
                           000005   499 	ar5 = 0x05
                           000004   500 	ar4 = 0x04
                           000003   501 	ar3 = 0x03
                           000002   502 	ar2 = 0x02
                           000001   503 	ar1 = 0x01
                           000000   504 	ar0 = 0x00
                                    505 ;	func.c:14: PCON = 0;           //reseting the Power control register
      000000 75 87 00         [24]  506 	mov	_PCON,#0x00
                                    507 ;	func.c:15: TMOD = 0x20;        //mode selection register
      000003 75 89 20         [24]  508 	mov	_TMOD,#0x20
                                    509 ;	func.c:16: SCON = 0x50;        //serial control register with receive enable
      000006 75 98 50         [24]  510 	mov	_SCON,#0x50
                                    511 ;	func.c:17: TH1 = 0xFD;         //setting baud rate to 9600
      000009 75 8D FD         [24]  512 	mov	_TH1,#0xfd
                                    513 ;	func.c:18: TCON = 0x40;        //Timer 1 run control bit enabled
      00000C 75 88 40         [24]  514 	mov	_TCON,#0x40
                                    515 ;	func.c:19: TR1 = 1;            //setting Timer 1 run control bit
                                    516 ;	assignBit
      00000F D2 8E            [12]  517 	setb	_TR1
                                    518 ;	func.c:20: TI = 1;             //setting Timer Interrupt
                                    519 ;	assignBit
      000011 D2 99            [12]  520 	setb	_TI
                                    521 ;	func.c:21: }
      000013 22               [24]  522 	ret
                                    523 ;------------------------------------------------------------
                                    524 ;Allocation info for local variables in function 'PWM_Start_Init'
                                    525 ;------------------------------------------------------------
                                    526 ;	func.c:30: void PWM_Start_Init(void)
                                    527 ;	-----------------------------------------
                                    528 ;	 function PWM_Start_Init
                                    529 ;	-----------------------------------------
      000014                        530 _PWM_Start_Init:
                                    531 ;	func.c:32: CMOD != 0x02;		// Enabling clock peripheral/2
      000014 E5 D9            [12]  532 	mov	a,_CMOD
                                    533 ;	func.c:33: CCON = 0x40;		// Start counter.
      000016 75 D8 40         [24]  534 	mov	_CCON,#0x40
                                    535 ;	func.c:34: CCAPM0 = 0x42;		// Enabling comparator
      000019 75 DA 42         [24]  536 	mov	_CCAPM0,#0x42
                                    537 ;	func.c:35: CCAP0L = 0xBF;		// Duty cycle by 25% (Low)
      00001C 75 EA BF         [24]  538 	mov	_CCAP0L,#0xbf
                                    539 ;	func.c:36: CCAP0H = 0xBF;		// Duty cycle by 25% (High)
      00001F 75 FA BF         [24]  540 	mov	_CCAP0H,#0xbf
                                    541 ;	func.c:37: CL = 0;			    // PCA Counter register (Low)
      000022 75 E9 00         [24]  542 	mov	_CL,#0x00
                                    543 ;	func.c:38: CH = 0;			    // PCA Counter register (High)
      000025 75 F9 00         [24]  544 	mov	_CH,#0x00
                                    545 ;	func.c:39: }
      000028 22               [24]  546 	ret
                                    547 ;------------------------------------------------------------
                                    548 ;Allocation info for local variables in function 'PWM_Stop_Init'
                                    549 ;------------------------------------------------------------
                                    550 ;	func.c:48: void PWM_Stop_Init(void)
                                    551 ;	-----------------------------------------
                                    552 ;	 function PWM_Stop_Init
                                    553 ;	-----------------------------------------
      000029                        554 _PWM_Stop_Init:
                                    555 ;	func.c:50: CMOD != 0x00;		// Enabling clock peripheral/2
      000029 E5 D9            [12]  556 	mov	a,_CMOD
                                    557 ;	func.c:51: CCON = 0x00;		// Start counter.
      00002B 75 D8 00         [24]  558 	mov	_CCON,#0x00
                                    559 ;	func.c:52: CCAPM0 = 0x00;		// Enabling comparator
      00002E 75 DA 00         [24]  560 	mov	_CCAPM0,#0x00
                                    561 ;	func.c:53: CCAP0L = 0x00;		// Disable Duty cycle
      000031 75 EA 00         [24]  562 	mov	_CCAP0L,#0x00
                                    563 ;	func.c:54: CCAP0H = 0x00;		// Disable Duty cycle
      000034 75 FA 00         [24]  564 	mov	_CCAP0H,#0x00
                                    565 ;	func.c:55: }
      000037 22               [24]  566 	ret
                                    567 ;------------------------------------------------------------
                                    568 ;Allocation info for local variables in function 'Highspeed_Toggle_Init'
                                    569 ;------------------------------------------------------------
                                    570 ;	func.c:63: void Highspeed_Toggle_Init(void)
                                    571 ;	-----------------------------------------
                                    572 ;	 function Highspeed_Toggle_Init
                                    573 ;	-----------------------------------------
      000038                        574 _Highspeed_Toggle_Init:
                                    575 ;	func.c:65: CMOD != 0x02;		// Enabling clock peripheral/2
      000038 E5 D9            [12]  576 	mov	a,_CMOD
                                    577 ;	func.c:66: CCON = 0x40;		// Start counter.
      00003A 75 D8 40         [24]  578 	mov	_CCON,#0x40
                                    579 ;	func.c:67: CCAPM0 = 0x4C;		// Enabling comparator.
      00003D 75 DA 4C         [24]  580 	mov	_CCAPM0,#0x4c
                                    581 ;	func.c:68: CCAP0L = 0xBF;		// Set Duty cycle 25%(Low)
      000040 75 EA BF         [24]  582 	mov	_CCAP0L,#0xbf
                                    583 ;	func.c:69: CCAP0H = 0xBF;		// Set Duty cycle 25%(High)
      000043 75 FA BF         [24]  584 	mov	_CCAP0H,#0xbf
                                    585 ;	func.c:70: CL = 0;			    // PCA Counter register(Low)
      000046 75 E9 00         [24]  586 	mov	_CL,#0x00
                                    587 ;	func.c:71: CH = 0;			    // PCA Counter register(High)
      000049 75 F9 00         [24]  588 	mov	_CH,#0x00
                                    589 ;	func.c:72: }
      00004C 22               [24]  590 	ret
                                    591 ;------------------------------------------------------------
                                    592 ;Allocation info for local variables in function 'Watchdog_Init'
                                    593 ;------------------------------------------------------------
                                    594 ;	func.c:80: void Watchdog_Init(void)
                                    595 ;	-----------------------------------------
                                    596 ;	 function Watchdog_Init
                                    597 ;	-----------------------------------------
      00004D                        598 _Watchdog_Init:
                                    599 ;	func.c:82: CMOD |= 0x42;        // Enabling WatchDog
      00004D 43 D9 42         [24]  600 	orl	_CMOD,#0x42
                                    601 ;	func.c:83: CCON |= 0x40;        // Start counter.
      000050 43 D8 40         [24]  602 	orl	_CCON,#0x40
                                    603 ;	func.c:84: CCAPM4 |= 0x40;      // Enabling compare and setting the match
      000053 43 DE 40         [24]  604 	orl	_CCAPM4,#0x40
                                    605 ;	func.c:85: CCAP4L = 0x7F;       // Setting random compare value(Low)
      000056 75 EE 7F         [24]  606 	mov	_CCAP4L,#0x7f
                                    607 ;	func.c:86: CCAP4H = 0x7F;       // Setting random compare value(High)
      000059 75 FE 7F         [24]  608 	mov	_CCAP4H,#0x7f
                                    609 ;	func.c:87: CL = 0;			     // PCA Counter register(Low)
      00005C 75 E9 00         [24]  610 	mov	_CL,#0x00
                                    611 ;	func.c:88: CH = 0;			     // PCA Counter register(High)
      00005F 75 F9 00         [24]  612 	mov	_CH,#0x00
                                    613 ;	func.c:89: }
      000062 22               [24]  614 	ret
                                    615 ;------------------------------------------------------------
                                    616 ;Allocation info for local variables in function 'getchar'
                                    617 ;------------------------------------------------------------
                                    618 ;	func.c:97: int getchar(void)
                                    619 ;	-----------------------------------------
                                    620 ;	 function getchar
                                    621 ;	-----------------------------------------
      000063                        622 _getchar:
                                    623 ;	func.c:99: while (RI == 0);
      000063                        624 00101$:
                                    625 ;	func.c:100: RI = 0;             // Clear RI flag
                                    626 ;	assignBit
      000063 10 98 02         [24]  627 	jbc	_RI,00114$
      000066 80 FB            [24]  628 	sjmp	00101$
      000068                        629 00114$:
                                    630 ;	func.c:101: return SBUF;        // Return character from SBUF
      000068 AE 99            [24]  631 	mov	r6,_SBUF
      00006A 7F 00            [12]  632 	mov	r7,#0x00
      00006C 8E 82            [24]  633 	mov	dpl,r6
      00006E 8F 83            [24]  634 	mov	dph,r7
                                    635 ;	func.c:102: }
      000070 22               [24]  636 	ret
                                    637 ;------------------------------------------------------------
                                    638 ;Allocation info for local variables in function 'putchar'
                                    639 ;------------------------------------------------------------
                                    640 ;c                         Allocated with name '_putchar_c_65536_85'
                                    641 ;------------------------------------------------------------
                                    642 ;	func.c:110: int putchar(int c)
                                    643 ;	-----------------------------------------
                                    644 ;	 function putchar
                                    645 ;	-----------------------------------------
      000071                        646 _putchar:
      000071 AF 83            [24]  647 	mov	r7,dph
      000073 E5 82            [12]  648 	mov	a,dpl
      000075 90r00r00         [24]  649 	mov	dptr,#_putchar_c_65536_85
      000078 F0               [24]  650 	movx	@dptr,a
      000079 EF               [12]  651 	mov	a,r7
      00007A A3               [24]  652 	inc	dptr
      00007B F0               [24]  653 	movx	@dptr,a
                                    654 ;	func.c:112: while (TI == 0);
      00007C                        655 00101$:
      00007C 30 99 FD         [24]  656 	jnb	_TI,00101$
                                    657 ;	func.c:113: SBUF = c;           // Load serial port with transmit value
      00007F 90r00r00         [24]  658 	mov	dptr,#_putchar_c_65536_85
      000082 E0               [24]  659 	movx	a,@dptr
      000083 FE               [12]  660 	mov	r6,a
      000084 A3               [24]  661 	inc	dptr
      000085 E0               [24]  662 	movx	a,@dptr
      000086 FF               [12]  663 	mov	r7,a
      000087 8E 99            [24]  664 	mov	_SBUF,r6
                                    665 ;	func.c:114: TI = 0;             // Clear TI flag
                                    666 ;	assignBit
      000089 C2 99            [12]  667 	clr	_TI
                                    668 ;	func.c:116: return c;
      00008B 8E 82            [24]  669 	mov	dpl,r6
      00008D 8F 83            [24]  670 	mov	dph,r7
                                    671 ;	func.c:117: }
      00008F 22               [24]  672 	ret
                                    673 	.area CSEG    (CODE)
                                    674 	.area CONST   (CODE)
                                    675 	.area XINIT   (CODE)
                                    676 	.area CABS    (ABS,CODE)
